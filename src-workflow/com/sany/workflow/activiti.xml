<?xml version="1.0" encoding="UTF-8"?>

<properties>

	<property name="queryProdef">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_, P.SUSPENSION_STATE_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id,
			app.system_name as wf_app_name, E.MESSAGETEMPLEID,E.MESSAGETEMPLETITLE,E.EMAILTEMPLEID, E.EMAILTEMPLETITLE, E.NOTICEID, E.IS_CONTAIN_HOLIDAY
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			left join td_wf_app_proc_relation pr on pr.procdef_id = p.key_
			left join td_wf_app app on app.id = pr.wf_app_id
			LEFT JOIN (SELECT A.PROCESS_KEY,
			 		A.IS_CONTAIN_HOLIDAY,
					A.NOTICEID,
                    A.MESSAGETEMPLEID,
                    B.TEMPLETITLE AS MESSAGETEMPLETITLE,
                    A.EMAILTEMPLEID,
                    C.TEMPLETITLE AS EMAILTEMPLETITLE
               FROM TD_WF_PROC_MESSTEMPLATE A
               LEFT JOIN TD_WF_MESSTEMPLATE B ON A.MESSAGETEMPLEID = B.TEMPLEID
               LEFT JOIN TD_WF_MESSTEMPLATE C ON A.EMAILTEMPLEID = C.TEMPLEID) E ON E.PROCESS_KEY = P.KEY_
			 
			where p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)
			#if($processKey && !$processKey.equals(""))
				and p.key_ like #[processKey]
			#end
			#if($resourceName && !$resourceName.equals(""))
				and p.resource_name_ like #[resourceName]
			#end
			#if($processName && !$processName.equals(""))
				and p.name_ like #[processName]
			#end
			#if($businesstype_id && !$businesstype_id.equals(""))
				and b.business_id = #[businesstype_id]
			#end
			#if($deploymentId && !$deploymentId.equals(""))
				and d.id_ = #[deploymentId]
			#end
			#if($wf_app_id && !$wf_app_id.equals(""))
				and p.key_ in (select procdef_id from td_wf_app_proc_relation where wf_app_id = #[wf_app_id])
			#end
			#if($wf_app_name && !$wf_app_name.equals(""))
				and p.key_ in (select procdef_id from td_wf_app_proc_relation r,td_wf_app a where a.id=r.wf_app_id and (a.system_id like #[wf_app_name] or a.system_name like #[wf_app_name]))
			#end
			#if($wf_app_mode_type_nonexist && !$wf_app_mode_type_nonexist.equals(""))
				and p.key_ not in (select procdef_id from td_wf_app_proc_relation r,td_wf_app a where a.id=r.wf_app_id and a.app_mode_type like #[wf_app_mode_type_nonexist])
			#end
			
		]]>
	</property>
	
	<!-- 获取运行时流程实例信息  gw_tanx-->
	<property name="queryProInstById_wf">
		<![CDATA[
			SELECT * FROM ACT_RU_EXECUTION A WHERE A.ID_=?
		]]>
	</property>
	
	<!-- 获取运行时流程实例信息  gw_tanx-->
	<property name="queryProInstListById_wf">
		<![CDATA[
			SELECT * FROM ACT_RU_EXECUTION A WHERE A.PROC_INST_ID_=? ORDER BY A.IS_ACTIVE_,A.REV_ DESC
		]]>
	</property>
	
	<!-- 流程实例列表数据  gw_tanx-->
	<property name="queryProInst_wf">
		<![CDATA[
			SELECT A.ID_,
		       A.PROC_INST_ID_,
		       A.BUSINESS_KEY_,
		       A.PROC_DEF_ID_,
		       A.START_TIME_,
		       A.END_TIME_,
		       A.DURATION_,
		       A.START_USER_ID_,
		       A.START_ACT_ID_,
		       A.END_ACT_ID_,
		       A.SUPER_PROCESS_INSTANCE_ID_,
		       A.DELETE_REASON_,
		       B.NAME_,
       		   B.KEY_,
		       B.VERSION_,
		       C.BUSINESS_NAME,
		       D.SUSPENSION_STATE_
		  FROM ACT_HI_PROCINST A
		  LEFT JOIN ACT_RE_PROCDEF B ON A.PROC_DEF_ID_ = B.ID_
		  LEFT JOIN ACT_RU_EXECUTION D ON A.PROC_INST_ID_ = D.ID_
		  
		  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
	          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
	         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) C ON B.KEY_ = C.PROCESS_KEY
		  
			WHERE 1=1
			
			#if($wf_key && !$wf_key.equals(""))
				AND B.KEY_ like #[wf_key]
			#end
			
			#if($wf_Inst_Id && !$wf_Inst_Id.equals(""))
				and A.ID_ like #[wf_Inst_Id]
			#end
			
			#if($wf_start_time1 && !$wf_start_time1.equals(""))
				and A.START_TIME_ >= #[wf_start_time1]
			#end
			
			#if($wf_start_time2 && !$wf_start_time2.equals(""))
				and A.START_TIME_ <= #[wf_start_time2]
			#end
			
			#if($wf_end_time1 && !$wf_end_time1.equals(""))
				and A.END_TIME_ >= #[wf_end_time1]
			#end
			
			#if($wf_end_time2 && !$wf_end_time2.equals(""))
				and A.END_TIME_ <= #[wf_end_time2]
			#end
			
			-- 流程状态 1 激活 2 挂起 3 流程结束 
			#if($wf_state && $wf_state.equals("3"))
				AND D.SUSPENSION_STATE_ IS NULL
			#elseif ($wf_state && $wf_state.equals("1"))
				AND D.SUSPENSION_STATE_ = 1
			#elseif ($wf_state && $wf_state.equals("2"))
				AND D.SUSPENSION_STATE_ = 2
			#end
			
			#if($wf_versions)
      			AND B.VERSION_ IN ( 
      				#foreach($wf_version in $wf_versions)
						#if($velocityCount == 0)
							#[wf_versions[$velocityCount]]
						#else
							,#[wf_versions[$velocityCount]]
						#end
					#end
      			)
			#end
			
			#if($wf_business_key && !$wf_business_key.equals(""))
				AND A.BUSINESS_KEY_ like #[wf_business_key]
			#end
			
			#if($businessTypeId && !$businessTypeId.equals(""))
				and C.business_id = #[businessTypeId]
			#end
			
			-- 应用
		    #if($wf_app_name && !$wf_app_name.equals(""))
		   		and b.key_ in (select procdef_id
				  from td_wf_app_proc_relation r, td_wf_app a
				 where a.id = r.wf_app_id
				   and (a.system_id like #[wf_app_name] or a.system_name like #[wf_app_name]))
		    #end
			
			ORDER BY A.START_TIME_ DESC
		]]>
	</property>
	
	<property name="queryProdefByKey">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? and p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)
				
			
			
		]]>
	</property>
	
	<property name="queryProdefByKeywithVersion">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? and p.version_ = ?
				
			
			
		]]>
	</property>
	
	<property name="queryProdefHisVersion">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? 
			order by p.version_ desc]]>
	</property>
	
	
	
	
	<property name="getUnloadProcesses">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			left join td_wf_pro_businesstype b on p.key_=b.process_key
			where p.key_ not in (select process_key from td_wf_pro_businesstype) and p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)			
		]]>
	</property>

	<property name="selectTaskByUser">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t 
			inner join act_ru_identitylink i on t.id_=i.task_id_ and i.user_id_ = ?
			inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_= ?
		]]>
	</property>
	
	<!-- 获取所有任务的未签收人员(处理人)  gw_tanx-->
	<property name="getCandidatorList_wf">
		<![CDATA[
			SELECT I.USER_ID_, RES.ID_
			  FROM ACT_RU_TASK RES
			 INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = RES.ID_
			 WHERE RES.ASSIGNEE_ IS NULL
			   AND I.TYPE_ = 'candidate'
			   
			   #if($wf_Inst_Id && !$wf_Inst_Id.equals(""))
			   		AND RES.PROC_INST_ID_=#[wf_Inst_Id]
			   #end
			   
			   #if($wf_key && !$wf_key.equals(""))
					AND EXISTS (SELECT 1
			          FROM ACT_RE_PROCDEF B
			         WHERE B.KEY_ = #[wf_key]
			           AND B.ID_ = RES.PROC_DEF_ID_)
			   #end
			   
		]]>
	</property>
	
	<!-- 根据流程实例id获取当前任务信息  gw_tanx-->
	<property name="getTaskInfoByInstId_wf">
		<![CDATA[
			SELECT A.ID_,
		       A.REV_,
		       A.EXECUTION_ID_,
		       A.PROC_INST_ID_,
		       A.PROC_DEF_ID_,
		       A.NAME_,
		       A.PARENT_TASK_ID_,
		       A.DESCRIPTION_,
		       A.TASK_DEF_KEY_,
		       A.OWNER_,
		       A.ASSIGNEE_,
		       A.DELEGATION_,
		       A.PRIORITY_,
		       A.CREATE_TIME_ as START_TIME_,
		       A.DUE_DATE_,
		       A.SUSPENSION_STATE_,
		       B.IS_RECALL AS ISRECALL,
		       B.IS_CANCEL AS ISCANCEL,
		       B.IS_DISCARD AS ISDISCARD
		  FROM ACT_RU_TASK A
		  LEFT JOIN TD_WF_NODE_WORKTIME B on a.proc_inst_id_ = b.process_id
                                 and a.task_def_key_ = b.node_key
		 WHERE A.PROC_INST_ID_ = ?
		]]>
	</property>
	
	<!-- 根据流程实例id获取当前任务信息  gw_tanx-->
	<property name="getTaskInfoByTaskId_wf">
		<![CDATA[
			SELECT A.ID_,
			   B.BUSINESS_KEY_,
		       A.REV_,
		       A.EXECUTION_ID_,
		       A.PROC_INST_ID_,
		       A.PROC_DEF_ID_,
		       A.NAME_,
		       A.PARENT_TASK_ID_,
		       A.DESCRIPTION_,
		       A.TASK_DEF_KEY_,
		       A.OWNER_,
		       A.ASSIGNEE_,
		       A.DELEGATION_,
		       A.PRIORITY_,
		       A.CREATE_TIME_ as START_TIME_,
		       A.DUE_DATE_,
		       A.SUSPENSION_STATE_,
		       C.IS_DISCARD ,
		       C.IS_CANCEL,
		       C.IS_RECALL
		  FROM ACT_RU_TASK A
		  LEFT JOIN ACT_RU_EXECUTION B ON A.PROC_INST_ID_ = B.PROC_INST_ID_
		  LEFT JOIN TD_WF_NODE_WORKTIME C ON A.PROC_INST_ID_ = C.PROCESS_ID
                                 		  AND A.TASK_DEF_KEY_ = C.NODE_KEY
		 WHERE A.Id_ = ?
		]]>
	</property>
	
	<!-- 根据任务id获取处理人列表  gw_tanx-->
	<property name="getCandidatorOftask_wf">
		<![CDATA[
			SELECT I.USER_ID_,I.GROUP_ID_
			  FROM ACT_RU_IDENTITYLINK I 
			 WHERE 1=1
			   and I.TYPE_ = 'candidate'
			   and I.TASK_ID_=?
		]]>
	</property>
	
	<!-- 工作流管理中查看明细列表  gw_tanx-->
	<property name="selectTaskHistorById_wf">
		<![CDATA[
			SELECT T.ID_,
			       T.PROC_DEF_ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.ACT_ID_,
			       T.TASK_ID_,
			       T.CALL_PROC_INST_ID_,
			       T.ACT_NAME_,
			       T.ACT_TYPE_,
			       T.OWNER_,
			       T.ASSIGNEE_,
			       A.DEALUSER AS USER_ID_,
			       T.START_TIME_,
			       T.CLAIM_TIME_,
			       T.END_TIME_,
			       T.DELETE_REASON_,
			       T.DURATION_,
			       T.DURATION_NODE,
			       T.IS_CONTAIN_HOLIDAY,
			       T.ALERTTIME,
			       T.OVERTIME,
			       T.ADVANCESEND,
			       T.OVERTIMESEND,
			       T.IS_AUTO_COMPLETE,
			       T.AUTO_HANDLER,
			       T.BUSSINESS_OP,
			       T.BUSSINESS_REMARK,
			       T.DELETE_REASON_
			       
			  FROM ACT_HI_ACTINST T
			  LEFT JOIN TD_WF_DEAL_TASK A ON T.TASK_ID_ = A.TASKID
                                    AND A.DEALTYPE = '2' -- 撤销
			  
			 WHERE 1=1 
			  
			 AND T.PROC_INST_ID_ = ?
			
			ORDER BY T.END_TIME_,T.START_TIME_ 
		]]>
	</property>
	
	<!-- 工作流管理中查看任务列表  gw_tanx-->
	<property name="selectTaskByUser_wf">
		<![CDATA[
		-- taskState签收状态字段 0 所有 1 未签收 2 签收
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("1")))
			-- 未签收任务
				select distinct 1 as state,A.BUSINESS_KEY_,B.KEY_,D.BUSINESS_NAME, 
				   RES.DURATION_NODE,RES.IS_CONTAIN_HOLIDAY,RES.ALERTTIME,RES.OVERTIME, RES.ADVANCESEND,
                   RES.OVERTIMESEND,RES.ID_,RES.REV_, RES.EXECUTION_ID_,RES.PROC_INST_ID_,RES.PROC_DEF_ID_,
				   RES.NAME_,RES.PARENT_TASK_ID_,RES.DESCRIPTION_,
                   RES.TASK_DEF_KEY_,RES.OWNER_,RES.ASSIGNEE_,RES.DELEGATION_,RES.PRIORITY_,
                   RES.CREATE_TIME_ AS START_TIME_,RES.DUE_DATE_, RES.SUSPENSION_STATE_
				  from ACT_RU_TASK RES
				  
				 inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = RES.ID_
				 LEFT JOIN ACT_RU_EXECUTION A ON RES.PROC_INST_ID_ = A.ID_
				 LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
				 
				 -- 获取业务类型				 
				 JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON B.KEY_ = D.PROCESS_KEY
				                                                          
				 WHERE RES.ASSIGNEE_ is null
				   		and I.TYPE_ = 'candidate'
				   
				   #if($isAdmin == false)
				   		and (I.USER_ID_ = #[assignee])
				   #end
				   
				   #if($processIntsId && !$processIntsId.equals(""))
				 		AND RES.PROC_INST_ID_ like #[processIntsId]
			 	   #end
			 	   
			 	   #if($taskName && !$taskName.equals(""))
				 		AND RES.NAME_ like #[taskName]
			 	   #end
				   
				   #if($taskId && !$taskId.equals(""))
					   	AND RES.ID_ like #[taskId]
				   #end
				   
				   #if($businessTypeId && !$businessTypeId.equals(""))
					   	and D.business_id = #[businessTypeId]
				   #end
				   
				   #if($businessKey && !$businessKey.equals(""))
					   	and A.BUSINESS_KEY_ like #[businessKey]
				   #end
				   
				   #if($processKey && !$processKey.equals(""))
				 	AND B.KEY_ like #[processKey]
				   #end
				   
				   -- 应用
				   #if($appName && !$appName.equals(""))
				   		and b.key_ in (select procdef_id
						  from td_wf_app_proc_relation r, td_wf_app a
						 where a.id = r.wf_app_id
						   and (a.system_id like #[appName] or a.system_name like #[appName]))
				   #end
				   
			#end
			
			#if($taskState && $taskState.equals("0"))
			 	union 
			#end
			
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("2")))
			-- 已签收任务
				select 2 as state,B.BUSINESS_KEY_,C.KEY_, D.BUSINESS_NAME,
				  A.DURATION_NODE, A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME,A.ADVANCESEND,
                  A.OVERTIMESEND,A.ID_,A.REV_, A.EXECUTION_ID_,A.PROC_INST_ID_,A.PROC_DEF_ID_,
         		  A.NAME_,A.PARENT_TASK_ID_,A.DESCRIPTION_,
                  A.TASK_DEF_KEY_,A.OWNER_,A.ASSIGNEE_,A.DELEGATION_,A.PRIORITY_,
                  A.CREATE_TIME_ AS START_TIME_,A.DUE_DATE_, A.SUSPENSION_STATE_
				  from ACT_RU_TASK a
				  
				  LEFT JOIN ACT_RU_EXECUTION B ON A.PROC_INST_ID_ = B.ID_
				  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
				  
				 -- 获取业务类型		
				  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
				         
				  WHERE 1=1
				  
				  #if($isAdmin == false)
				   	and a.ASSIGNEE_ = #[assignee]
				  #else
				    and a.ASSIGNEE_ is not null
				  #end
				  
				  #if($processIntsId && !$processIntsId.equals(""))
				 	AND a.PROC_INST_ID_ like #[processIntsId]
			 	  #end
			 	   
			 	  #if($taskName && !$taskName.equals(""))
				 	AND a.NAME_ like #[taskName]
			 	  #end
				  
				  #if($taskId && !$taskId.equals(""))
					  AND A.ID_ like #[taskId]
				  #end
				  
				  #if($businessTypeId && !$businessTypeId.equals(""))
					  and D.business_id = #[businessTypeId]
				  #end
				  
				  #if($businessKey && !$businessKey.equals(""))
					  and B.BUSINESS_KEY_ like #[businessKey]
				  #end
				  
				  #if($processKey && !$processKey.equals(""))
				 	AND C.KEY_ like #[processKey]
				  #end
				  
				  -- 应用
				  #if($appName && !$appName.equals(""))
				   		and c.key_ in (select procdef_id
						  from td_wf_app_proc_relation r, td_wf_app a
						 where a.id = r.wf_app_id
						   and (a.system_id like #[appName] or a.system_name like #[appName]))
				  #end
			#end
			
			ORDER BY START_TIME_ DESC  
		]]>
	</property>
	
	<!-- 工作流管理中查看委托任务列表  gw_tanx-->
	<property name="selectEntrustTaskByUser_wf">
		<![CDATA[
		-- taskState签收状态字段 0 所有 1 未签收 2 签收
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("1")))
			-- 未签收任务
				select distinct 1 as state,A.BUSINESS_KEY_,B.KEY_,D.BUSINESS_NAME, 
				  RES.DURATION_NODE, RES.IS_CONTAIN_HOLIDAY, RES.ALERTTIME, RES.OVERTIME, 
				  RES.ADVANCESEND, RES.OVERTIMESEND,RES.ID_,RES.REV_, RES.EXECUTION_ID_,
                  RES.PROC_INST_ID_,RES.PROC_DEF_ID_,RES.NAME_,RES.PARENT_TASK_ID_,RES.DESCRIPTION_,
                  RES.TASK_DEF_KEY_,RES.OWNER_,RES.ASSIGNEE_,RES.DELEGATION_,RES.PRIORITY_,
                  RES.CREATE_TIME_ AS START_TIME_,RES.DUE_DATE_, RES.SUSPENSION_STATE_
				  from ACT_RU_TASK RES
				  
				 inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = RES.ID_
				 LEFT JOIN ACT_RU_EXECUTION A ON RES.PROC_INST_ID_ = A.ID_
				 LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
				 
				 -- 获取业务类型				 
				 JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON B.KEY_ = D.PROCESS_KEY
				                                                          
				 WHERE RES.ASSIGNEE_ is null
				   		and I.TYPE_ = 'candidate'
				   
				   #if($processIntsId && !$processIntsId.equals(""))
				 		AND RES.PROC_INST_ID_ like #[processIntsId]
			 	   #end
			 	   
			 	   #if($taskName && !$taskName.equals(""))
				 		AND RES.NAME_ like #[taskName]
			 	   #end
				   
				   #if($taskId && !$taskId.equals(""))
					   	AND RES.ID_ like #[taskId]
				   #end
				   
				   #if($businessTypeId && !$businessTypeId.equals(""))
					   	and D.business_id = #[businessTypeId]
				   #end
				   
				   #if($businessKey && !$businessKey.equals(""))
					   	and A.BUSINESS_KEY_ like #[businessKey]
				   #end
				   
				   #if($processKey && !$processKey.equals(""))
				 	AND B.KEY_ like #[processKey]
				   #end
				   
				   -- 应用
				   #if($appName && !$appName.equals(""))
				   		and b.key_ in (select procdef_id
						  from td_wf_app_proc_relation r, td_wf_app a
						 where a.id = r.wf_app_id
						   and (a.system_id like #[appName] or a.system_name like #[appName]))
				   #end
				   
				   #if($entrustList && $entrustList.size()>0)
				   		and (
	      				#foreach($WfEntrust in $entrustList)
	      					#if($velocityCount == 0)
	    	                   (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
	    	                   
	    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
	    	                   	AND RES.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
	    	                   	AND RES.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
	    	                   	AND B.KEY_ = #[entrustList[$velocityCount]->procdefId] 
	    	                   #end
	    	                   )
			    	        #else  
								OR (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
	    	                   
	    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
	    	                   	AND RES.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
	    	                   	AND RES.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
	    	                   	AND B.KEY_ = #[entrustList[$velocityCount]->procdefId] 
	    	                   #end
	    	                   )
			    	        #end
						#end
						)
					#end
			#end
			
			#if($taskState && $taskState.equals("0"))
			 	union 
			#end
			
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("2")))
			-- 已签收任务
				select 2 as state,B.BUSINESS_KEY_,C.KEY_, D.BUSINESS_NAME,
				  A.DURATION_NODE,A.IS_CONTAIN_HOLIDAY,A.ALERTTIME, A.OVERTIME,
       			  A.ADVANCESEND, A.OVERTIMESEND,A.ID_,A.REV_, A.EXECUTION_ID_,
                  A.PROC_INST_ID_,A.PROC_DEF_ID_,A.NAME_,A.PARENT_TASK_ID_,A.DESCRIPTION_,
                  A.TASK_DEF_KEY_,A.OWNER_,A.ASSIGNEE_,A.DELEGATION_,A.PRIORITY_,
                  A.CREATE_TIME_ AS START_TIME_,A.DUE_DATE_, A.SUSPENSION_STATE_
				  from ACT_RU_TASK a
				  
				  LEFT JOIN ACT_RU_EXECUTION B ON A.PROC_INST_ID_ = B.ID_
				  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
				  
				 -- 获取业务类型		
				  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
				         
				  WHERE 1=1
				  
				  #if($processIntsId && !$processIntsId.equals(""))
				 	AND a.PROC_INST_ID_ like #[processIntsId]
			 	  #end
			 	   
			 	  #if($taskName && !$taskName.equals(""))
				 	AND a.NAME_ like #[taskName]
			 	  #end
				  
				  #if($taskId && !$taskId.equals(""))
					  AND A.ID_ like #[taskId]
				  #end
				  
				  #if($businessTypeId && !$businessTypeId.equals(""))
					  and D.business_id = #[businessTypeId]
				  #end
				  
				  #if($businessKey && !$businessKey.equals(""))
					  and B.BUSINESS_KEY_ like #[businessKey]
				  #end
				  
				  #if($processKey && !$processKey.equals(""))
				 	AND C.KEY_ like #[processKey]
				  #end
				  
				  -- 应用
				  #if($appName && !$appName.equals(""))
				   		and c.key_ in (select procdef_id
						  from td_wf_app_proc_relation r, td_wf_app a
						 where a.id = r.wf_app_id
						   and (a.system_id like #[appName] or a.system_name like #[appName]))
				  #end
				  
				  #if($entrustList && $entrustList.size()>0)
				   		and (
	      				#foreach($WfEntrust in $entrustList)
	      					#if($velocityCount == 0)
	    	                   (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
	    	                   
	    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
	    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
	    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
	    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
	    	                   #end
	    	                   )
			    	        #else  
								OR (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
	    	                   
	    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
	    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
	    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
	    	                   #end
	    	                   
	    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
	    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
	    	                   #end
	    	                   )
			    	        #end
						#end
						)
					#end
			#end
			
			ORDER BY START_TIME_ DESC  
		]]>
	</property>
	
	<!-- 工作流管理统一代办获取委托任务列表  gw_tanx-->
	<property name="selectNoHandleEntrustTask_wf">
		<![CDATA[
			select distinct 1    	as taskState,
                B.Business_Key_  	as businessKey,
                b.start_user_id_ 	as userAccount,
                c.name_          	as title,
                a.ID_           	as taskId,
                a.PROC_INST_ID_  	as instanceId,
                a.PROC_DEF_ID_   	as defId,
                a.TASK_DEF_KEY_  	as taskDefKey,
                a.CREATE_TIME_   	AS createTime,
                c.key_              as processkey,
                a.suspension_state_ as suspensionState,
                I.USER_ID_			as FROMUSER,
                d.APP_URL           as appUrl
			  from ACT_RU_TASK a
			
			 inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = a.ID_
			  LEFT JOIN ACT_HI_PROCINST B ON B.Proc_Inst_Id_ = a.Proc_Inst_Id_
			  left join act_re_procdef c on c.id_ = b.proc_def_id_
			  
			  -- 关联系统
			  INNER JOIN (SELECT A.PROCDEF_ID, B.APP_URL
               FROM TD_WF_APP_PROC_RELATION A
               LEFT JOIN TD_WF_APP B ON A.WF_APP_ID = B.ID
	           #if($sysid && !$sysid.equals(""))
	             WHERE B.SYSTEM_ID = #[sysid]
	           #end
	           ) D ON D.PROCDEF_ID = C.KEY_
			
			 WHERE a.ASSIGNEE_ is null
			   	and I.TYPE_ = 'candidate'

         		-- 委托关系
        		#if($entrustList && $entrustList.size()>0)
			   		and (
      				#foreach($WfEntrust in $entrustList)
      					#if($velocityCount == 0)
    	                   (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
    	                   
    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
    	                   	AND a.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
    	                   	AND a.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
    	                   #end
    	                   )
		    	        #else  
							OR (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
    	                   
    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
    	                   	AND a.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
    	                   	AND a.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
    	                   #end
    	                   )
		    	        #end
					#end
					)
				#end
			
			union 
			
			-- 已签收任务
			select 2                	as taskState,
			       B.Business_Key_  	as businessKey,
			       b.start_user_id_ 	as userAccount,
			       c.name_          	as title,
			       a.ID_            	as taskId,
			       a.PROC_INST_ID_  	as instanceId,
			       a.PROC_DEF_ID_   	as defId,
			       a.TASK_DEF_KEY_  	as taskDefKey,
			       a.CREATE_TIME_   	AS createTime,
			       c.key_              	as processkey,
                   a.suspension_state_ 	as suspensionState,
                   a.ASSIGNEE_			as FROMUSER,
                   d.APP_URL            as appUrl
			  from ACT_RU_TASK a
			
			  LEFT JOIN ACT_HI_PROCINST B ON B.Proc_Inst_Id_ = a.Proc_Inst_Id_
			  left join act_re_procdef c on c.id_ = b.proc_def_id_
			    -- 关联系统
			  INNER JOIN (SELECT A.PROCDEF_ID, B.APP_URL
               FROM TD_WF_APP_PROC_RELATION A
               LEFT JOIN TD_WF_APP B ON A.WF_APP_ID = B.ID
	           #if($sysid && !$sysid.equals(""))
	             WHERE B.SYSTEM_ID = #[sysid]
	           #end
	           ) D ON D.PROCDEF_ID = C.KEY_
			 where 1 = 1
				  
			  #if($entrustList && $entrustList.size()>0)
			   		and (
      				#foreach($WfEntrust in $entrustList)
      					#if($velocityCount == 0)
    	                   (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
    	                   
    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
    	                   #end
    	                   )
		    	        #else  
							OR (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
    	                   
    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
    	                   #end
    	                   
    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
    	                   #end
    	                   )
		    	        #end
					#end
					)
				#end
			
			ORDER BY createTime DESC  
		]]>
	</property>
	
	<!-- 工作流管理统一代办获取委托任务条数  gw_tanx-->
	<property name="countEntrustTaskNum_wf">
		<![CDATA[
			SELECT COUNT(*)
			  FROM (
			  		-- 未签收任务
			  		SELECT DISTINCT A.*
			          FROM ACT_RU_TASK A
			        
			         INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = A.ID_
			         left join act_re_procdef c on c.id_ = A.proc_def_id_
			        
			         WHERE a.ASSIGNEE_ is null
			           and I.TYPE_ = 'candidate'
			           
			           -- 系统id来查数据
					   #if($sysid && !$sysid.equals(""))
						   and exists (select aa.procdef_id
						          from td_wf_app_proc_relation aa
						         where exists (select 1
						                  From td_wf_app b
						                 where aa.wf_app_id = b.id
						                   and b.system_id = #[sysid])
						           and aa.procdef_id = C.KEY_)
					    #end
					    
					    #if($entrustList && $entrustList.size()>0)
					   		and (
		      				#foreach($WfEntrust in $entrustList)
		      					#if($velocityCount == 0)
		    	                   (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
		    	                   
		    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
		    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
		    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
		    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
		    	                   #end
		    	                   )
				    	        #else  
									OR (I.USER_ID_ = #[entrustList[$velocityCount]->create_user] 
		    	                   
		    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
		    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
		    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
		    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
		    	                   #end
		    	                   )
				    	        #end
							#end
							)
						#end
			        
			        union
			      -- 签收任务  
			        SELECT A.*
			          FROM ACT_RU_TASK A
			          left join act_re_procdef c on c.id_ = A.proc_def_id_
			        
			         WHERE 1=1
			         	
			         	-- 系统id来查数据
					   #if($sysid && !$sysid.equals(""))
						   and exists (select aa.procdef_id
						          from td_wf_app_proc_relation aa
						         where exists (select 1
						                  From td_wf_app b
						                 where aa.wf_app_id = b.id
						                   and b.system_id = #[sysid])
						           and aa.procdef_id = C.KEY_)
					    #end
					    
					    #if($entrustList && $entrustList.size()>0)
					   		and (
		      				#foreach($WfEntrust in $entrustList)
		      					#if($velocityCount == 0)
		    	                   (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
		    	                   
		    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
		    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
		    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
		    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
		    	                   #end
		    	                   )
				    	        #else  
									OR (a.ASSIGNEE_ = #[entrustList[$velocityCount]->create_user] 
		    	                   
		    	                   #if($WfEntrust.start_date && !$WfEntrust.start_date.equals(""))
		    	                   	AND A.CREATE_TIME_ >= #[entrustList[$velocityCount]->start_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.end_date && !$WfEntrust.end_date.equals(""))
		    	                   	AND A.CREATE_TIME_ <= #[entrustList[$velocityCount]->end_date] 
		    	                   #end
		    	                   
		    	                   #if($WfEntrust.procdefId && !$WfEntrust.procdefId.equals(""))
		    	                   	AND C.KEY_ = #[entrustList[$velocityCount]->procdefId] 
		    	                   #end
		    	                   )
				    	        #end
							#end
							)
						#end
			         ) a
		]]>
	</property>
	
	<!-- 工作流管理统一代办当前用户自己任务条数  gw_tanx-->
	<property name="countTaskNum_wf">
		<![CDATA[
			SELECT COUNT(*) as tasknum
			  FROM (
			  	-- 未签收任务
			  		SELECT DISTINCT A.*
			          FROM ACT_RU_TASK A
			        
			         INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = A.ID_
			         LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = A.PROC_DEF_ID_
			        
			         WHERE a.ASSIGNEE_ is null
			           and I.TYPE_ = 'candidate'
			              
			           and I.USER_ID_ = #[assignee]
			           
			           -- 系统id来查数据
					   #if($sysid && !$sysid.equals(""))
						   and exists (select aa.procdef_id
						          from td_wf_app_proc_relation aa
						         where exists (select 1
						                  From td_wf_app b
						                 where aa.wf_app_id = b.id
						                   and b.system_id = #[sysid])
						           and aa.procdef_id = C.KEY_)
					    #end
			        
			        union
			      -- 签收任务  
			        SELECT A.*
			          FROM ACT_RU_TASK A
			          LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = A.PROC_DEF_ID_
			        
			         WHERE a.ASSIGNEE_ = #[assignee]
			         	
			         	-- 系统id来查数据
					   #if($sysid && !$sysid.equals(""))
						   and exists (select aa.procdef_id
						          from td_wf_app_proc_relation aa
						         where exists (select 1
						                  From td_wf_app b
						                 where aa.wf_app_id = b.id
						                   and b.system_id = #[sysid])
						           and aa.procdef_id = C.KEY_)
					    #end
			         ) a
		]]>
	</property>
	
	<!-- 工作流管理统一代办获取任务列表  gw_tanx-->
	<property name="selectNoHandleTask_wf">
		<![CDATA[
		-- taskState签收状态字段  1 未签收 2 签收
			select distinct 1    	as taskState,
                B.Business_Key_  	as businessKey,
                b.start_user_id_ 	as userAccount,
                c.name_          	as title,
                a.ID_            	as taskId,
                a.PROC_INST_ID_  	as instanceId,
                a.PROC_DEF_ID_   	as defId,
                a.TASK_DEF_KEY_  	as taskDefKey,
                a.CREATE_TIME_   	AS createTime,
                c.key_              as processkey,
                a.suspension_state_ as suspensionState,
                null				AS FROMUSER,
                d.APP_URL           as appUrl
			  from ACT_RU_TASK a
			
			 inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = a.ID_
			  LEFT JOIN ACT_HI_PROCINST B ON B.Proc_Inst_Id_ = a.Proc_Inst_Id_
			  left join act_re_procdef c on c.id_ = b.proc_def_id_
			  
			   -- 关联系统
			  INNER JOIN (SELECT A.PROCDEF_ID, B.APP_URL
               FROM TD_WF_APP_PROC_RELATION A
               LEFT JOIN TD_WF_APP B ON A.WF_APP_ID = B.ID
	           #if($sysid && !$sysid.equals(""))
	             WHERE B.SYSTEM_ID = #[sysid]
	           #end
	           ) D ON D.PROCDEF_ID = C.KEY_
			
			 WHERE a.ASSIGNEE_ is null
			   	and I.TYPE_ = 'candidate'
			   
				and (I.USER_ID_ = #[assignee])
			   
			union

			select 2                	as taskState,
			       B.Business_Key_  	as businessKey,
			       b.start_user_id_ 	as userAccount,
			       c.name_          	as title,
			       a.ID_            	as taskId,
			       a.PROC_INST_ID_  	as instanceId,
			       a.PROC_DEF_ID_   	as defId,
			       a.TASK_DEF_KEY_  	as taskDefKey,
			       a.CREATE_TIME_   	AS createTime,
			       c.key_              	as processkey,
                   a.suspension_state_ 	as suspensionState,
                   e.FROM_USER          AS FROMUSER,
                   d.APP_URL            as appUrl
			  from ACT_RU_TASK a
			
			  LEFT JOIN ACT_HI_PROCINST B ON B.Proc_Inst_Id_ = a.Proc_Inst_Id_
			  left join act_re_procdef c on c.id_ = b.proc_def_id_
			  
			   -- 关联系统
			  INNER JOIN (SELECT A.PROCDEF_ID, B.APP_URL
               FROM TD_WF_APP_PROC_RELATION A
               LEFT JOIN TD_WF_APP B ON A.WF_APP_ID = B.ID
	           #if($sysid && !$sysid.equals(""))
	             WHERE B.SYSTEM_ID = #[sysid]
	           #end
	           ) D ON D.PROCDEF_ID = C.KEY_
	           
			  left join td_wf_node_changeinfo e on a.id_ = e.taskid
                                   				and a.assignee_ = e.to_user
			 where 1 = 1
			 
				and a.ASSIGNEE_ = #[assignee]
			   
		]]>
	</property>
	
	<!-- admin工作流管理中查看历史任务列表  gw_tanx-->
	<property name="selectHistoryTaskForAdmin_wf">
		<![CDATA[
		
		-- 用户自己处理的任务记录
			SELECT B.BUSINESS_KEY_, C.KEY_, D.BUSINESS_NAME, A.DURATION_NODE,
       		   A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME, A.ID_,A.PROC_DEF_ID_,
		       A.TASK_DEF_KEY_, A.PROC_INST_ID_,  A.EXECUTION_ID_, A.PARENT_TASK_ID_, A.NAME_,
		       A.DESCRIPTION_, A.OWNER_, A.ASSIGNEE_,  A.START_TIME_ as START_TIME_, A.CLAIM_TIME_,
		       A.END_TIME_,A.DURATION_,  A.DELETE_REASON_, A.PRIORITY_, A.DUE_DATE_, A.FORM_KEY_ ,
		       F.CREATE_USER, F.ENTRUST_USER
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.PROC_INST_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  -- 获取业务类型	             
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
              -- 委托处理记录
              LEFT JOIN TD_WF_ENTRUST_TASK F ON A.ID_ = F.TASKID
                 
			 WHERE A.END_TIME_ IS NOT NULL
			 
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			  
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
			 
			  #if($createUser && !$createUser.equals(""))
			 	AND F.CREATE_USER like #[createUser]
		 	  #end
			 
			  #if($entrustUser && !$entrustUser.equals(""))
			 	AND F.ENTRUST_USER like #[entrustUser]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
			  
			  -- 应用
			  #if($appName && !$appName.equals(""))
			   	  and c.key_ in (select procdef_id
					  from td_wf_app_proc_relation r, td_wf_app a
					where a.id = r.wf_app_id
					   and (a.system_id like #[appName] or a.system_name like #[appName]))
			  #end
			  
			  ORDER BY START_TIME_ DESC
		]]>
	</property>
	
	<!-- notadmin工作流管理中查看历史任务列表  gw_tanx-->
	<property name="selectHistoryTaskForNotAdmin_wf">
		<![CDATA[
		-- entrustUser字段有值，那么只查委托任务记录
		#if(!$entrustUser || $entrustUser.equals(""))
		-- 用户自己处理的任务记录
			SELECT B.BUSINESS_KEY_, C.KEY_,D.BUSINESS_NAME, A.DURATION_NODE,
       		   A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME, A.ID_,A.PROC_DEF_ID_,
		       A.TASK_DEF_KEY_, A.PROC_INST_ID_,  A.EXECUTION_ID_, A.PARENT_TASK_ID_, A.NAME_,
		       A.DESCRIPTION_, A.OWNER_, A.ASSIGNEE_,  A.START_TIME_ as START_TIME_, A.CLAIM_TIME_,
		       A.END_TIME_,A.DURATION_,  A.DELETE_REASON_, A.PRIORITY_, A.DUE_DATE_, A.FORM_KEY_ 
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.PROC_INST_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  -- 获取业务类型	             
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
                 
			 WHERE A.END_TIME_ IS NOT NULL
			 
				AND A.ASSIGNEE_ = #[assignee]
				
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			 
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
			  
			   -- 应用
			  #if($appName && !$appName.equals(""))
			   	  and c.key_ in (select procdef_id
					  from td_wf_app_proc_relation r, td_wf_app a
					where a.id = r.wf_app_id
					   and (a.system_id like #[appName] or a.system_name like #[appName]))
			  #end
			  
			  -- 排除自己签收，被委托人处理的重复记录
			  AND NOT EXISTS
 				(SELECT 1 FROM TD_WF_ENTRUST_TASK TWET WHERE TWET.TASKID = A.ID_)
			  
		union
		#end
		
		-- 用户处理别人委托任务的处理记录
		
			SELECT B.BUSINESS_KEY_, C.KEY_, D.BUSINESS_NAME, A.DURATION_NODE,
       		   A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME, A.ID_,A.PROC_DEF_ID_,
		       A.TASK_DEF_KEY_, A.PROC_INST_ID_,  A.EXECUTION_ID_, A.PARENT_TASK_ID_,A.NAME_,
		       A.DESCRIPTION_, A.OWNER_, F.ENTRUST_USER as ASSIGNEE_,  A.START_TIME_ as START_TIME_, 
		       A.CLAIM_TIME_,A.END_TIME_,A.DURATION_,  A.DELETE_REASON_, A.PRIORITY_, A.DUE_DATE_, A.FORM_KEY_ 
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.PROC_INST_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  -- 获取业务类型	             
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
			  -- 委托处理记录
  			  right JOIN TD_WF_ENTRUST_TASK F ON A.ID_ = F.TASKID
                 
			 WHERE A.END_TIME_ IS NOT NULL
			 	
			 	AND F.CREATE_USER = #[assignee]
			 	
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			 	
			  #if($entrustUser && !$entrustUser.equals(""))
			 	AND F.ENTRUST_USER like #[entrustUser]
		 	  #end
			 
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
		
		union
		-- 别人委托给当前用户任务的处理记录
		
			SELECT B.BUSINESS_KEY_, C.KEY_, D.BUSINESS_NAME, A.DURATION_NODE,
       		   A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME, A.ID_,A.PROC_DEF_ID_,
		       A.TASK_DEF_KEY_, A.PROC_INST_ID_,  A.EXECUTION_ID_, A.PARENT_TASK_ID_,A.NAME_,
		       A.DESCRIPTION_, A.OWNER_, F.ENTRUST_USER as ASSIGNEE_,  A.START_TIME_ as START_TIME_, 
		       A.CLAIM_TIME_,A.END_TIME_,A.DURATION_,  A.DELETE_REASON_, A.PRIORITY_, A.DUE_DATE_, A.FORM_KEY_ 
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.PROC_INST_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  -- 获取业务类型	             
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
			  -- 委托处理记录
  			  right JOIN TD_WF_ENTRUST_TASK F ON A.ID_ = F.TASKID
                 
			 WHERE A.END_TIME_ IS NOT NULL
			 	
			 	AND F.ENTRUST_USER = #[assignee]
			 	
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			 	
			  #if($entrustUser && !$entrustUser.equals(""))
			 	AND F.ENTRUST_USER like #[entrustUser]
		 	  #end
			 
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
		
		-- entrustUser字段有值，那么只查委托任务记录
		#if(!$entrustUser || $entrustUser.equals(""))
		
		union
		-- 用户转办记录
		
			SELECT B.BUSINESS_KEY_, C.KEY_,D.BUSINESS_NAME, A.DURATION_NODE,
       		   A.IS_CONTAIN_HOLIDAY, A.ALERTTIME, A.OVERTIME, A.ID_,A.PROC_DEF_ID_,
		       A.TASK_DEF_KEY_, A.PROC_INST_ID_,  A.EXECUTION_ID_, A.PARENT_TASK_ID_,A.NAME_,
		       A.DESCRIPTION_, A.OWNER_, A.ASSIGNEE_,  A.START_TIME_ as START_TIME_, 
		       A.CLAIM_TIME_,A.END_TIME_,A.DURATION_,  A.DELETE_REASON_, A.PRIORITY_, A.DUE_DATE_, A.FORM_KEY_ 
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.PROC_INST_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  -- 获取业务类型	             
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
			  -- 转办记录
  			 RIGHT JOIN TD_WF_NODE_CHANGEINFO F ON A.ID_ = F.TASKID
                 
			 WHERE A.END_TIME_ IS NOT NULL
			 	
			 	AND F.FROM_USER = #[assignee]
			 	
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			 
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
		 #end
			  
			  ORDER BY START_TIME_ DESC
		]]>
	</property>
	
	<property name="selectGroupByUser">
		<![CDATA[
			select g.group_name from td_sm_group g inner join  td_sm_usergroup ug on g.group_id=ug.group_id 
			where ug.user_id=(select u.user_id from td_sm_user u where u.user_name=?)
		]]>
	</property>
	
	<property name="selectTaskByGroup">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t
      		inner join act_ru_identitylink i on t.id_=i.task_id_ and i.group_id_ = ? 
      		inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_= ?
		]]>
	</property>
	
	<property name="selectAllTaskByUser">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t
      		left join act_ru_identitylink i on t.id_=i.task_id_  
      		#if($processKeys)
      			inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_ in (
      				#foreach($processKey in $processKeys)
							#if($velocityCount == 0)
								#[processKeys[$velocityCount]]
							#else
								,#[processKeys[$velocityCount]]
							#end
						#end
      			)
			#end
      		where i.user_id_ = #[username] 
      		or i.group_id_ in (select g.group_name from td_sm_group g inner join  td_sm_usergroup ug on g.group_id=ug.group_id 
			where ug.user_id=(select u.user_id from td_sm_user u where u.user_name= #[username] )) 
			or t.assignee_ = #[username]
			order by  t.create_time_ desc
		]]>
	</property>
	
	<property name="listTaskAndVarsByUserWithState">
		<![CDATA[ select var.*,user1.USER_REALNAME name_,
            user2.USER_REALNAME SenderName,user3.USER_REALNAME mainSenderName from (
            select 
                max(il.USER_ID_)  user_id_,
                il.task_id_,max(task.CREATE_TIME_) CREATE_TIME_,
                max(task.TASK_DEF_KEY_) TASK_DEF_KEY_,max(exec.BUSINESS_KEY_) business_key_,
                max(var.EXECUTION_ID_) EXECUTION_ID_,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Url') then var.TEXT_ else null end)  url
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'User') then var.TEXT_ else null end)  variable_user
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Sender')  then var.TEXT_ else null end)  sender
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Title')  then var.TEXT_ else null end)  title
                                ,max(case when var.NAME_ = 'state' then var.TEXT_ else null end)  state
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                left join act_ru_variable var on task.PROC_INST_ID_ = var.PROC_INST_ID_
                left join act_ru_execution exec on task.PROC_INST_ID_ = exec.PROC_INST_ID_
                where il.USER_ID_=#[userAccount] and EXISTS (select 1 from act_ru_variable b
                where b.PROC_INST_ID_ = var.PROC_INST_ID_ and b.NAME_='state' and b.TEXT_=#[state])
                and INSTR(task.PROC_DEF_ID_ ,#[processkey]) > 0
                group by il.TASK_ID_)  var 
            left join td_sm_user user1 on var.user_id_=user1.USER_NAME 
            left join td_sm_user user2 on var.sender=user2.USER_NAME
            left join td_sm_user user3 on var.sender=user3.USER_NAME 
            order by CREATE_TIME_ desc
		]]>
	</property>
	<property name="listTaskAndVarsByUserWithStates">
		<![CDATA[ select var.*,user1.USER_REALNAME name_,
            user2.USER_REALNAME SenderName,user3.USER_REALNAME mainSenderName from (
            select 
                max(il.USER_ID_)  user_id_,
                il.task_id_,max(task.CREATE_TIME_) CREATE_TIME_,
                max(task.TASK_DEF_KEY_) TASK_DEF_KEY_,max(exec.BUSINESS_KEY_) business_key_,
                max(var.EXECUTION_ID_) EXECUTION_ID_,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Url') then var.TEXT_ else null end)  url
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'User') then var.TEXT_ else null end)  variable_user
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Sender')  then var.TEXT_ else null end)  sender
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Title')  then var.TEXT_ else null end)  title
                                ,max(case when var.NAME_ = 'state' then var.TEXT_ else null end)  state
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                left join act_ru_variable var on task.PROC_INST_ID_ = var.PROC_INST_ID_
                left join act_ru_execution exec on task.PROC_INST_ID_ = exec.PROC_INST_ID_
                where il.USER_ID_=#[userAccount] 
                and EXISTS (select 1 from act_ru_variable b
                                    where b.PROC_INST_ID_ = var.PROC_INST_ID_ and b.NAME_='state' 
                                    #if($states && !$states.equals(""))
					                   and b.TEXT_ in(
					                   #foreach($state in $states)
					                       #if($velocityCount == 0)
					                          #[states[$velocityCount]]
					                       #else
					                          , #[states[$velocityCount]]
					                       #end
					                   #end
					                   )
					                #end
                            )
                #if($processkeys && !$processkeys.equals(""))
                   and (substr(task.PROC_DEF_ID_, 0, instr(task.PROC_DEF_ID_, ':')-1) in(
                   #foreach($processkey in $processkeys)
                       #if($velocityCount == 0)
                          #[processkeys[$velocityCount]]
                       #else
                          , #[processkeys[$velocityCount]]
                       #end
                   #end
                   )
                #end
                )
                group by il.TASK_ID_)  var 
            left join td_sm_user user1 on var.user_id_=user1.USER_NAME 
            left join td_sm_user user2 on var.sender=user2.USER_NAME
            left join td_sm_user user3 on var.sender=user3.USER_NAME 
            order by CREATE_TIME_ desc
		]]>
	</property>
	<property name="countlistTaskAndVarsByUserWithState">
		<![CDATA[ 
           select 
                count(1)
                from
                (
                select il.*
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                where il.USER_ID_=#[userAccount] 
               and EXISTS (select 1 from act_ru_variable b
                       where b.PROC_INST_ID_ = task.PROC_INST_ID_ and b.NAME_='state' and b.TEXT_=#[state])
                and INSTR(task.PROC_DEF_ID_ ,#[processkey]) > 0 
               )
		]]>
	</property>
	
	<property name="countlistTaskAndVarsByUserWithStates">
		<![CDATA[ 
           select 
                count(1)
                from
                (
	                select il.*
	                from
	                act_ru_identitylink il
	                left join act_ru_task task on il.TASK_ID_ = task.ID_
	                where il.USER_ID_=#[userAccount] 
	                and EXISTS (
	                    select 1 from act_ru_variable b
	                         where b.PROC_INST_ID_ = task.PROC_INST_ID_ and b.NAME_='state'
	                               #if($states && !$states.equals(""))
				                   and b.TEXT_ in(
				                   #foreach($state in $states)
				                       #if($velocityCount == 0)
				                          #[states[$velocityCount]]
				                       #else
				                          , #[states[$velocityCount]]
				                       #end
				                   #end
				                   )
				                #end
	                     )
	                #if($processkeys && !$processkeys.equals(""))
	                   and (substr(task.PROC_DEF_ID_, 0, instr(task.PROC_DEF_ID_, ':')-1) in(
	                   #foreach($processkey in $processkeys)
	                       #if($velocityCount == 0)
	                          #[processkeys[$velocityCount]]
	                       #else
	                          , #[processkeys[$velocityCount]]
	                       #end
	                   #end
	                   )
	                #end
	                )
            )
		]]>
	</property>
	
	<property name="queryHisTask">
		<![CDATA[
			select t.id_ as id,t.proc_def_id_ as processDefinitionId ,t.task_def_key_ as taskDefinitionKey,t.proc_inst_id_ as processInstanceId,
			t.execution_id_ as executionId,t.parent_task_id_ as parentTaskId,t.name_ as name,t.description_ as description,t.owner_ as owner,
			t.assignee_ as assignee,t.start_time_ as startTime,t.end_time_ as endTime,t.delete_reason_ as deleteReason
			from act_hi_taskinst t where 
			assignee_ =#[username] and   t.end_time_ is not null
			#if($processKeys)
				and proc_def_id_ in (select ID_ from act_re_procdef where key_ in(
					#foreach($processKey in $processKeys)
							#if($velocityCount == 0)
								#[processKeys[$velocityCount]]
							#else
								,#[processKeys[$velocityCount]]
							#end
					#end
				)
				)
			#end
		]]>
	</property>
	
	<property name="queryHisTaskById">
		<![CDATA[
			SELECT T.ID_             AS ID,
		           T.PROC_DEF_ID_    AS PROCESSDEFINITIONID,
		           T.TASK_DEF_KEY_   AS TASKDEFINITIONKEY,
		           T.PROC_INST_ID_   AS PROCESSINSTANCEID,
		           T.EXECUTION_ID_   AS EXECUTIONID,
		           T.PARENT_TASK_ID_ AS PARENTTASKID,
		           T.NAME_           AS NAME,
		           T.DESCRIPTION_    AS DESCRIPTION,
		           T.OWNER_          AS OWNER,
		           T.ASSIGNEE_       AS ASSIGNEE,
		           T.START_TIME_     AS STARTTIME,
		           T.END_TIME_       AS ENDTIME,
		           T.DELETE_REASON_  AS DELETEREASON
		      FROM ACT_HI_TASKINST T
		     WHERE 1=1
		     
		     #if($processInstId && !$processInstId.equals(""))
				 AND T.PROC_INST_ID_ = #[processInstId]
			 #end
			 
			 #if($processDefId && !$processDefId.equals(""))
				 AND T.PROC_DEF_ID_ = #[processDefId]
			 #end
			 
			 #if($processKey && !$processKey.equals(""))
				 AND EXISTS
				 (SELECT 1 FROM ACT_RE_PROCDEF A WHERE A.KEY_ = #[processKey]
				 AND T.PROC_DEF_ID_ = A.ID_)
			 #end
		]]>
	</property>
	
	<property name="selectOrgByParentId">
		<![CDATA[
			select  org_id as id,org_name as text from td_sm_organization  where parent_id=?
		]]>
	</property>
	
	<property name="selectOrgNameByOrgId">
		<![CDATA[
			select org_name from td_sm_organization  where org_id=?
		]]>
	</property>
	
	<property name="existNodeinfo">
		<![CDATA[
			select id from td_wf_activiti_node_info where process_key=? and node_key=?
		]]>
	</property>
	
	<property name="updateActivitiNodeInfo">
		<![CDATA[
			update td_wf_activiti_node_info 
			   set process_key = #[process_key],
			       node_key    = #[node_key],
			       node_name   = #[node_name],
			       node_type   = #[node_type],
			       order_num   = #[order_num]
			 where id = #[id]
		]]>
	</property>
	
	<property name="updateNodeOrderNum">
		<![CDATA[
			update td_wf_activiti_node_info 
			   set order_num = #[ORDER_NUM]
			 where id = #[ID]
		]]>
	</property>
	
	<property name="selectActivitiNodeCandidateByNodeId">
		<![CDATA[
			select * from td_wf_activiti_node_candidate where node_id=#[node_id] and org_id=#[org_id]
		]]>
	</property>
	
	<property name="selectUserInfoByNames">
		<![CDATA[
			select u.user_id ,u.user_name ,u.user_realname ,u.user_worknumber  
			,org.org_name ,j.job_name 
			from td_sm_userjoborg oj inner join  td_sm_user u on u.user_id=oj.user_id 
			inner join td_sm_organization org on oj.org_id=org.org_id
			inner join td_sm_job j on oj.job_id = j.job_id
			 where u.user_name in (
						#foreach($user in $usernames)
							#if($velocityCount == 0)
								#[usernames[$velocityCount]]
							#else
								,#[usernames[$velocityCount]]
							#end
						#end
						)
		]]>
	</property>
	
	<property name="selectUserRealNameByName">
		<![CDATA[
			select user_realname from td_sm_user where user_name=?
		]]>
	</property>
	
	<property name="selectUsersByCondition">
		<![CDATA[
			select u.user_id ,u.user_name ,u.user_realname ,u.user_worknumber  
			,org.org_name ,j.job_name
			from td_sm_userjoborg oj inner join  td_sm_user u on u.user_id=oj.user_id 
			inner join td_sm_organization org on oj.org_id=org.org_id
			inner join td_sm_job j on oj.job_id = j.job_id
			where 1=1 
			
			#if($org_id && !$org_id.equals(""))
				and oj.org_id = #[org_id]
			#end
			
			#if($user_name && !$user_name.equals(""))
			 and ((u.user_worknumber like #[user_name]) or
      			 (u.user_realname like #[user_name]) or 
      			 (u.user_name like #[user_name]))
			#end
		]]>
	</property>
	
	<!-- 获取用户信息 gw_tanx -->
	<property name="selectUsersByUserName_wf">
		<![CDATA[
			select u.user_id ,u.user_name ,u.user_realname ,u.user_worknumber  
			,org.org_name ,j.job_name
			from td_sm_userjoborg oj inner join  td_sm_user u on u.user_id=oj.user_id 
			inner join td_sm_organization org on oj.org_id=org.org_id
			inner join td_sm_job j on oj.job_id = j.job_id
			where 1=1 
				and u.user_name = ?
		]]>
	</property>
	
	<property name="selectGroupInfoByNames">
		<![CDATA[
			select t.*,u.user_realname as owner_name from td_sm_group t inner join td_sm_user u on t.owner_id = u.user_id 
			 where t.group_name in (
			#foreach($group in $groups)
							#if($velocityCount == 0)
								#[groups[$velocityCount]]
							#else
								,#[groups[$velocityCount]]
							#end
						#end
						)
		]]>
	</property>
	
	<property name="selectActivitiNodeCandidateById">
		<![CDATA[
			select * from td_wf_activiti_node_candidate where id=#[id]
		]]>
	</property>
	
	<property name="selectActivitiNodeInfoById">
		<![CDATA[
			select * from td_wf_activiti_node_info where id=#[id]
		]]>
	</property>
	
	<property name="selectActivitiNodeInfoIDByNodeKey">
		<![CDATA[
			select * from td_wf_activiti_node_info where process_key=? and node_key=?
		]]>
	</property>
	
	<property name="insertActivitiNodeInfo">
		<![CDATA[
			insert into td_wf_activiti_node_info(ID,
        PROCESS_KEY,
        NODE_KEY,
        NODE_NAME,
        NODE_TYPE,
        ORDER_NUM
    ) values(#[id],#[process_key],#[node_key],#[node_name],#[node_type],#[order_num])
		]]>
	</property>
	
	<property name="deleteActivitiNodeInfoByKey">
		<![CDATA[
			delete from  td_wf_activiti_node_info where process_key=#[process_key]
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidataByKey">
		<![CDATA[
			 delete from td_wf_activiti_node_candidate where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	<!-- 清理冗余的流程节点配置 -->
	<property name="deleteNotexistActivitiNodeCandidataByKey">
		<![CDATA[
			 delete from td_wf_activiti_node_candidate where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key] and node_key not in (
                  	#foreach($key in $nodekey)  
                            #if($velocityCount == 0)  
                              #[nodekey[$velocityCount]]  
                            #else  
                               ,#[nodekey[$velocityCount]]  
                           #end  
                        #end  
                  	
                  ))
		]]>
	</property>
	
	<property name="deleteNodevariableByKey">
		<![CDATA[
			 delete from td_wf_nodevariable where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	
	<property name="deleteNotexistNodevariableByKey">
		<![CDATA[
			 delete from td_wf_nodevariable where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key]  and node_key not in (
                  	#foreach($key in $nodekey)  
                            #if($velocityCount == 0)  
                              #[nodekey[$velocityCount]]  
                            #else  
                               ,#[nodekey[$velocityCount]]  
                           #end  
                        #end  
                  	
                  ))
		]]>
	</property>
	
	
	<property name="insertActivitiNodeCandidate">
		<![CDATA[
			insert into td_wf_activiti_node_candidate
  			(id, node_id, candidate_groups_id, candidate_groups_name, candidate_users_id, 
  			 candidate_users_name, business_id, business_type, create_date, create_person_id,
   			create_person_name, candidate_orgs_id, candidate_orgs_name, candidate_jobs_id, 
   			candidate_jobs_name, candidate_roles_id, candidate_roles_name)
   			values(#[id],#[node_id],#[candidate_groups_id],#[candidate_groups_name],
			#[candidate_users_id],#[candidate_users_name],#[business_id],#[business_type],#[create_date],
			#[create_person_id],#[create_person_name],#[candidate_orgs_id],#[candidate_orgs_name],
			#[candidate_jobs_id],#[candidate_jobs_name],#[candidate_roles_id],#[candidate_roles_name])
		]]>
	</property>
	
	<property name="queryActivitiNodeCandidate">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
			#if($business_type && !$business_type.equals(""))
				and t.business_type = #[business_type]
			#end
			 where 1=1
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	
	<property name="queryProcessNodesCandidates">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,
			t.candidate_users_id,t.candidate_users_name
       		
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
			
			and t.business_type = #[business_type]
			
			#if($bussinessid && !$bussinessid.equals(""))
				and t.business_id = #[bussinessid]
			#end
			
			 where n.process_key = #[process_key] 
			 	and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	<property name="queryNodes">
		<![CDATA[
			select a.*, 
				   B.DURATION_NODE / 1000 / 60 / 60 AS DURATION_NODE,
			       B.IS_VALID,
			       B.IS_EDIT,
			       B.IS_AUTO,
			       B.IS_RECALL,
			       B.IS_EDITAFTER,
			       B.IS_DISCARD,
			       B.IS_COPY,
			       B.IS_CANCEL,
			       B.IS_AUTOAFTER,
			       B.IS_MULTI,
			       B.IS_SEQUENTIAL,
			       B.TASK_URL,
			       B.NODE_DESCRIBE,
			       B.BUSSINESSCONTROLCLASS
			  from td_wf_activiti_node_info a
			  left join td_wf_controlparam b on a.id = b.node_id
											and b.business_type = '0'
			 where a.process_key = ?
			 order by a.order_num
		]]>
	</property>
	
	<property name="queryAllActivitiNodes">
		<![CDATA[
			select n.* from td_wf_activiti_node_info n
			 where n.process_key = ?
			order by n.order_num
		]]>
	</property>
	
	<!-- 获取节点信息(包含工时)  gw_tanx -->
	<property name="getAllActivitiNodesInfo_wf">
		<![CDATA[
			SELECT N.*, A.DURATION_NODE
			  FROM TD_WF_ACTIVITI_NODE_INFO N
			  LEFT JOIN TD_WF_NODE_WORKTIME A ON N.PROCESS_KEY = A.PROCESS_KEY
			                                 AND A.PROCESS_ID = ?
			                                 AND N.NODE_KEY = A.NODE_KEY
			 WHERE N.PROCESS_KEY = ?
			 ORDER BY N.ORDER_NUM
		]]>
	</property>
	
	<property name="queryProcessNodeCandidates">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 				
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
				and t.business_type = #[business_type]
			 where n.process_key = #[process_key]
			 and n.node_key=#[node_key] and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	<property name="queryActivitiNodeWithCommonCandidate">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name,
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
				#if($business_id && !$business_id.equals(""))
					and t.business_id = #[business_id] 
				#end
				#if($business_type && !$business_type.equals(""))
					and t.business_type = #[business_type]
				#end
			  where 1=1
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	
	<property name="queryActivitiNodeInfo">
		<![CDATA[
			select n.*
			from td_wf_activiti_node_info n 
			where n.process_key = #[process_key]
			order by n.order_num
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidateByNodeId">
		<![CDATA[
			delete from  td_wf_activiti_node_candidate where node_id=#[node_id] 
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end
			and business_type=#[business_type]
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidate">
		<![CDATA[
			delete from  td_wf_activiti_node_candidate where 1=1  
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end
			and business_type=#[business_type]
			and NODE_ID in (select ID from td_wf_activiti_node_info where PROCESS_KEY=#[process_key])
		]]>
	</property>
	
	<property name="addNodevariable">
		<![CDATA[
			insert into td_wf_nodevariable (id,business_id,business_type,node_id,param_name,param_value,param_type,param_des,is_edit_param,rowno_) 
			values(#[id],#[business_id],#[business_type],#[node_id],#[param_name],#[param_value],#[param_type],#[param_des],#[is_edit_param],#[rowno_])
		]]>
	</property>
	
	<property name="addNodeControlParam">
		<![CDATA[
			INSERT INTO TD_WF_CONTROLPARAM
			(ID,NODE_ID, BUSINESS_ID,BUSINESS_TYPE,DURATION_NODE,IS_VALID,IS_EDIT,IS_EDITAFTER,IS_AUTO,
			 IS_AUTOAFTER,IS_RECALL,TASK_URL,NODE_DESCRIBE,IS_DISCARD,IS_COPY,IS_CANCEL,BUSSINESSCONTROLCLASS,
			 IS_MULTI,IS_SEQUENTIAL) 
			 VALUES(#[ID],#[NODE_ID],#[BUSINESS_ID],#[BUSINESS_TYPE],#[DURATION_NODE],#[IS_VALID],#[IS_EDIT],
			 	#[IS_EDITAFTER],#[IS_AUTO],#[IS_AUTOAFTER],#[IS_RECALL],#[TASK_URL],#[NODE_DESCRIBE],
			 	#[IS_DISCARD],#[IS_COPY],#[IS_CANCEL],#[BUSSINESSCONTROLCLASS],#[IS_MULTI],#[IS_SEQUENTIAL])
		]]>
	</property>
	
	<property name="addNodevariableresource">
		<![CDATA[
			insert into td_wf_nodevariableresource
            (id, node_id, param_name, param_value, param_des, is_edit_param)
            values
            (#[id], #[node_id], #[param_name], #[param_value], #[param_des], #[is_edit_param])
		]]>
	</property>
	
	<property name="deleteNodevariableresource">
		<![CDATA[
			delete from td_wf_nodevariableresource where node_id in (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	
	<property name="selectNodevariableresource">
		<![CDATA[
			select t.*,n.node_key,n.node_name from  td_wf_nodevariableresource t
			inner join td_wf_activiti_node_info n on t.node_id=n.id where 1=1
			and process_key=#[process_key]
		]]>
	</property>
	
	<property name="selectNodevariableresourceById">
		<![CDATA[
			select * from  td_wf_nodevariableresource t
			where t.id=?
		]]>
	</property>
	
	<property name="updateNodeVariable">
		<![CDATA[
			update td_wf_nodevariable set param_value=#[param_value],param_des=#[param_des] where id=#[id]
		]]>
	</property>
	
	<property name="updateNodeVariableByNodeId">
		<![CDATA[
			update td_wf_nodevariable set param_value=#[param_value],param_des=#[param_des] where node_id=#[node_id] and param_name=#[param_name]
		]]>
	</property>
	
	<property name="deleteNodeVariable">
		<![CDATA[
			delete from td_wf_nodevariable where id=#[id]
		]]>
	</property>
	
	<property name="batchDeleteNodeVariable">
		<![CDATA[
			delete from td_wf_nodevariable
			where node_id in (select id from td_wf_activiti_node_info where process_key=#[process_key])
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end			
			and business_type=#[business_type]
		]]>
	</property>
	
	<property name="deleteNodeContralParam">
		<![CDATA[
			delete from td_wf_controlparam
			where node_id in (select id from td_wf_activiti_node_info where process_key=#[process_key])
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end			
			and business_type=#[business_type]
		]]>
	</property>
	
	
	<property name="queryNodevariableByParamName">
		<![CDATA[
			select * from  td_wf_nodevariable t
			where t.param_name=#[param_name] and node_id=#[node_id]
		]]>
	</property>
	
	<property name="queryNodevariable">
		<![CDATA[
			select t.*,n.node_key,n.node_name from  td_wf_nodevariable t
			inner join td_wf_activiti_node_info n on t.node_id=n.id where 1=1
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
			#if($business_type && !$business_type.equals(""))
				and t.business_type = #[business_type]
			#end
			order by n.order_num,  t.rowno_
		]]>
	</property>
	
	<property name="selectNodevariableById">
		<![CDATA[
			select t.*,n.node_name from  td_wf_nodevariable t inner join td_wf_activiti_node_info n on t.node_id=n.id  where t.id=?
		]]>
	</property>
	
	<property name="queryGroup">
		<![CDATA[
			select t.*,u.user_realname as owner_name from td_sm_group t inner join td_sm_user u on t.owner_id = u.user_id 
			where 1=1
			#if($group_name && !$group_name.equals(""))
				and t.group_name like #[group_name]
			#end
			#if($group_desc && !$group_desc.equals(""))
				and t.group_desc like #[group_desc]
			#end
			#if($user_name && !$user_name.equals(""))
				and u.user_name like #[user_name]
			#end
		]]>
	</property>
	
	<property name="insertProBusinessType">
		<![CDATA[
			insert into td_wf_pro_businesstype (id,process_key,businesstype_id) values(#[id],#[process_key],#[businessType_id])
		]]>
	</property>
	
	<property name="updateProBusinessType">
		<![CDATA[
			update td_wf_pro_businesstype set businesstype_id=#[businessType_id] where process_key=#[process_key]
		]]>
	</property>
	
	<property name="queryProBusinessTypeByProKey">
		<![CDATA[
			select id from td_wf_pro_businesstype where process_key=#[process_key]
		]]>
	</property>
	
	<property name="deleteProBusinessByKey">
		<![CDATA[
			delete from td_wf_pro_businesstype where process_key=#[process_key]
		]]>
	</property>
	
	
	<property name="queryBusinessNameByProKey">
		<![CDATA[
			select business_name from td_wf_businesstype where business_id = (select businesstype_id from td_wf_pro_businesstype where process_key=?)
		]]>
	</property>
	
	
	<property name="insertAppProcdefRelation">
		<![CDATA[
			insert into td_wf_app_proc_relation 
				(ID, WF_APP_ID, PROCDEF_ID) 
			values
				(#[id], #[wf_app_id], #[procdef_id])
		]]>
	</property>
	
	<property name="deleteAppProcdefRelation">
		<![CDATA[
			delete from td_wf_app_proc_relation  
			where 1=1
				#if($id && !$id.equals(""))
					and id = #[id] 
				#end
				#if($wf_app_id && !$wf_app_id.equals(""))
					and wf_app_id = #[wf_app_id] 
				#end
				#if($procdef_id && !$procdef_id.equals(""))
					and procdef_id = #[procdef_id] 
				#end
		]]>
	</property>	
	
	<property name="selectAppProcdefRelation">
		<![CDATA[
			select * from td_wf_app_proc_relation  
			where 1=1
				#if($id && !$id.equals(""))
					and id = #[id] 
				#end
				#if($wf_app_id && !$wf_app_id.equals(""))
					and wf_app_id = #[wf_app_id] 
				#end
				#if($procdef_id && !$procdef_id.equals(""))
					and procdef_id = #[procdef_id] 
				#end
		]]>
	</property>
	<property name="updateAppProcdefRelation">
		<![CDATA[
			update td_wf_app_proc_relation  
			       set id = #[id],wf_app_id=#[wf_app_id],procdef_id=#[procdef_id]
			       where id=#[id]
		]]>
	</property>
	
	<!-- 根据流程实例ID获取实例参数变量值 gw_tanx -->
	<property name="getVariableListById_wf">
		<![CDATA[
			 SELECT B.ID_,
		        B.REV_,
		        B.TYPE_,
		        B.NAME_,
		        B.EXECUTION_ID_,
		        B.PROC_INST_ID_,
		        B.TASK_ID_,
		        B.BYTEARRAY_ID_,
		        B.DOUBLE_,
		        B.LONG_,
		        B.TEXT_,
		        B.TEXT2_
		   FROM ACT_RU_VARIABLE B
		  WHERE B.PROC_INST_ID_ = ?
		  ORDER BY B.NAME_
		]]>
	</property>
	
	<!-- 获取当前节点信息 gw_tanx -->
	<property name="getCurrentNodeInfoById_wf">
		<![CDATA[
			  SELECT DISTINCT A.PROC_INST_ID_, A.TASK_DEF_KEY_,A.NAME_
			   FROM ACT_RU_TASK A
			  WHERE A.PROC_INST_ID_ = ?
		]]>
	</property>
	
	<!-- 获取流程实例所有参数信息 gw_tanx -->
	<property name="getInstVariableInfoById_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.PROC_INST_ID_ =  ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程运行实例参数信息 gw_tanx -->
	<property name="getRunInstVariableInfoById_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.execution_id_ =  ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程实例参数信息 gw_tanx -->
	<property name="getInstVariableInfoByIdAndName_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.execution_id_ =  ?
			 and t.name_= ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程版本集合 gw_tanx -->
	<property name="getProcessVersionList_wf">
		<![CDATA[
			  SELECT DISTINCT T.VERSION_ FROM ACT_RE_PROCDEF T 
				WHERE 1=1
				#if($processKey && !$processKey.equals(""))
					AND T.KEY_= #[processKey]
				#end 
				ORDER BY T.VERSION_
		]]>
	</property>
	
	<!-- 获取节点参数信息 gw_tanx -->
	<property name="queryNodeVariable_wf">
		<![CDATA[
			  SELECT T.BUSINESS_ID,
				       T.PARAM_NAME,
				       T.PARAM_DES,
				       T.PARAM_VALUE,
				       T.PARAM_TYPE,
				       T.IS_EDIT_PARAM,
				       T.NODE_ID,
				       N.*
				  FROM TD_WF_ACTIVITI_NODE_INFO N
			  
				 RIGHT JOIN TD_WF_NODEVARIABLE T ON T.NODE_ID = N.ID
				       AND T.BUSINESS_TYPE = #[business_type]
				                                
				 WHERE N.PROCESS_KEY = #[process_key]
				 
					#if($bussinessid && !$bussinessid.equals(""))
						and t.business_id = #[bussinessid]
					#end
			
				 ORDER BY N.ORDER_NUM
		]]>
	</property>
	
	<!-- 获取节点控制参数信息 gw_tanx -->
	<property name="queryNodeContralParam_wf">
		<![CDATA[
			 SELECT  A.ID AS NODE_ID,A.NODE_KEY,A.NODE_TYPE, A.NODE_NAME, B.ID, B.BUSINESS_ID,
			       B.BUSINESS_TYPE,B.DURATION_NODE / 1000 / 60 / 60 AS DURATION_NODE ,
			       B.IS_VALID, B.IS_EDIT, B.IS_AUTO, B.IS_RECALL, B.IS_EDITAFTER,
			       B.TASK_URL, B.NODE_DESCRIBE, B.IS_DISCARD, B.IS_COPY, B.IS_CANCEL,
			       B.IS_AUTOAFTER, B.BUSSINESSCONTROLCLASS, B.IS_MULTI, B.IS_SEQUENTIAL
			       FROM TD_WF_ACTIVITI_NODE_INFO A
				  LEFT JOIN TD_WF_CONTROLPARAM B ON A.ID = B.NODE_ID
				                                AND B.BUSINESS_TYPE = #[business_type]
				                                
				    #if($business_id && !$business_id.equals(""))
						and b.business_id = #[business_id]
					#end
				                                
				 WHERE A.NODE_TYPE = 'userTask'
   					AND A.PROCESS_KEY = #[process_key]
				 
					#if($taskKey && !$taskKey.equals(""))
						 AND A.NODE_KEY = #[taskKey]
					#end
			
				 ORDER BY A.ORDER_NUM
		]]>
	</property>
	
	<!-- 获取节点控制参数信息 gw_tanx -->
	<property name="getNodeContralParam_wf">
		<![CDATA[
			SELECT *
			  FROM TD_WF_NODE_WORKTIME A
			 WHERE A.PROCESS_ID = ?
			   AND A.NODE_KEY = ?
		]]>
	</property>
	
	<!-- 添加流程消息提示方式记录  gw_tanx -->
	<property name="insertProTemplate_wf">
		<![CDATA[
			 INSERT INTO TD_WF_PROC_MESSTEMPLATE
			     (NOTICEID,
			      PROCESS_KEY,
			      MESSAGETEMPLEID,
			      EMAILTEMPLEID,
			      IS_CONTAIN_HOLIDAY,
			      NOTICERATE)
			   VALUES
			     (?, ?, ?, ?, ?, ?)
		]]>
	</property>
	
	<!-- 添加流程定义计算工时是否包含节假日  gw_tanx -->
	<property name="insertProIsContainHoliday_wf">
		<![CDATA[
			insert into TD_WF_PROC_MESSTEMPLATE (NOTICEID,PROCESS_KEY,IS_CONTAIN_HOLIDAY) values(?,?,?)
		]]>
	</property>
	
	<!-- 修改流程定义计算工时是否包含节假日  gw_tanx -->
	<property name="updateProIsContainHoliday_wf">
		<![CDATA[
			update TD_WF_PROC_MESSTEMPLATE set IS_CONTAIN_HOLIDAY = ? where NOTICEID = ?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="updateProTemplate_wf">
		<![CDATA[
			  UPDATE TD_WF_PROC_MESSTEMPLATE
			     SET MESSAGETEMPLEID    = ?,
			         EMAILTEMPLEID      = ?,
			         IS_CONTAIN_HOLIDAY = ?,
			         NOTICERATE         = ?
			   WHERE NOTICEID = ?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="queryNoticeIdByProKey">
		<![CDATA[
			select NOTICEID from TD_WF_PROC_MESSTEMPLATE where process_key=?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="getMessTamplateById_wf">
		<![CDATA[
			SELECT A.PROCESS_KEY,
			       A.NOTICEID,
			       A.MESSAGETEMPLEID,
			       B.TEMPLETITLE AS MESSAGETEMPLETITLE,
			       A.EMAILTEMPLEID,
			       C.TEMPLETITLE AS EMAILTEMPLETITLE,
			       A.IS_CONTAIN_HOLIDAY,
       			   A.NOTICERATE
			  FROM TD_WF_PROC_MESSTEMPLATE A
			  LEFT JOIN TD_WF_MESSTEMPLATE B ON A.MESSAGETEMPLEID = B.TEMPLEID
			  LEFT JOIN TD_WF_MESSTEMPLATE C ON A.EMAILTEMPLEID = C.TEMPLEID
			  where 1=1
			  and PROCESS_KEY=?
		]]>
	</property>
	
	<!-- 删除节点控制信息  gw_tanx -->
	<property name="deleteNodeWorktime_wf">
		<![CDATA[
			DELETE FROM TD_WF_NODE_WORKTIME
				 WHERE PROCESS_KEY = #[PROCESS_KEY]
				   AND PROCESS_ID = #[PROCESS_ID]
				   AND NODE_KEY = #[NODE_KEY]
		]]>
	</property>
	
	<!-- 添加节点处理工时与提醒次数  gw_tanx -->
	<property name="insertNodeWorktime_wf">
		<![CDATA[
			INSERT INTO TD_WF_NODE_WORKTIME
				  (PROCESS_KEY,
				   PROCESS_ID,
				   NODE_KEY,
				   DURATION_NODE,
				   IS_VALID,
				   IS_EDIT,
				   IS_AUTO,
				   IS_RECALL,
				   IS_EDITAFTER,
				   IS_DISCARD,
				   IS_COPY,
				   IS_CANCEL,
				   IS_AUTOAFTER,
				   BUSSINESSCONTROLCLASS,
				   TASK_URL,
				   NODE_DESCRIBE,
				   NODE_NAME,
				   IS_MULTI,
				   IS_SEQUENTIAL)
				VALUES
			  (#[PROCESS_KEY],#[PROCESS_ID],#[NODE_KEY],#[DURATION_NODE],#[IS_VALID],#[IS_EDIT],#[IS_AUTO],
			  #[IS_RECALL],#[IS_EDITAFTER],#[IS_DISCARD],#[IS_COPY],#[IS_CANCEL],#[IS_AUTOAFTER],
			  #[BUSSINESSCONTROLCLASS],#[TASK_URL],#[NODE_DESCRIBE],#[NODE_NAME],#[IS_MULTI],#[IS_SEQUENTIAL])
		]]>
	</property>
	
	<!-- 删除流程定义的消息提醒设置信息  gw_tanx -->
	<property name="deleteProcMesstemplateBykey">
		<![CDATA[
			 delete from TD_WF_PROC_MESSTEMPLATE where process_key=#[process_key]
		]]>
	</property>
	
	<!-- 删除流程实例的处理工时信息  gw_tanx -->
	<property name="deleteNodeWorktimeBykey">
		<![CDATA[
			 delete from TD_WF_NODE_WORKTIME where process_key=#[process_key]
		]]>
	</property>
	
	<!-- 删除流程实例的处理工时信息  gw_tanx -->
	<property name="deleteNodeWorktimeByProcesId_wf">
		<![CDATA[
			 delete from TD_WF_NODE_WORKTIME where PROCESS_ID=?
		]]>
	</property>
	
	<!-- 删除任务转办关系表信息  gw_tanx -->
	<property name="deleteNodeChangeInfoBykey">
		<![CDATA[
			 delete from TD_WF_NODE_CHANGEINFO where process_key=#[process_key]
		]]>
	</property>
	
	<!-- 删除委托处理的任务表信息  gw_tanx -->
	<property name="deleteEntrustTaskBykey">
		<![CDATA[
			 delete from TD_WF_ENTRUST_TASK where process_key=#[process_key]
		]]>
	</property>
	
	<!-- 删除驳回/撤销/废弃记录信息  gw_tanx -->
	<property name="deleteDealTaskBykey">
		<![CDATA[
			 delete from TD_WF_DEAL_TASK where process_key=#[process_key]
		]]>
	</property>
	
	<!-- 根据用户获取委托关系列表数据  gw_tanx -->
	<property name="selectEntrustList">
		<![CDATA[
			SELECT A.ENTRUST_USER,
			       A.START_DATE,
			       A.END_DATE,
			       B.PROCDEF_ID,
			       A.CREATE_USER
			  FROM TD_WF_ENTRUST A
			  LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID = B.ENTRUST_ID
			 WHERE A.STS ='有效'
				 
				#if($isAdmin == false)
				   	and a.entrust_user = #[entrust_user]
				   	
				   	#if($create_user && !$create_user.equals(""))
				   		and a.CREATE_USER like #[create_user]
				   	#end
				#end
				
				#if($isAdmin == true && $create_user && !$create_user.equals(""))
				   	and a.CREATE_USER like #[create_user]
				#end
		]]>
	</property>
	
	<!-- 根据条件获取节点工时  gw_tanx -->
	<property name="getNodeWorktime_wf">
		<![CDATA[
			SELECT A.DURATION_NODE, B.IS_CONTAIN_HOLIDAY, B.NOTICERATE
			  FROM TD_WF_NODE_WORKTIME A
			  LEFT JOIN TD_WF_PROC_MESSTEMPLATE B ON A.PROCESS_KEY = B.PROCESS_KEY
			  WHERE A.PROCESS_ID = ?
			  AND A.NODE_KEY = ?
		]]>
	</property>
	
	<!-- 根据条件获取节点工时  gw_tanx -->
	<property name="getNodeHoliday_wf">
		<![CDATA[
			SELECT T.IS_CONTAIN_HOLIDAY, T.NOTICERATE
			  FROM TD_WF_PROC_MESSTEMPLATE T
			 WHERE T.PROCESS_KEY = ?
		]]>
	</property>
	
	<!-- 添加节点任务转办信息  gw_tanx -->
	<property name="addNodeChangeInfo_wf">
		<![CDATA[
			 INSERT INTO TD_WF_NODE_CHANGEINFO (FROM_USER,TO_USER,TASKID,PROCESS_ID,
			 	PROCESS_KEY,CHANGETIME,DELEGATEREMARK,DELEGATEREASON) 
			 	VALUES (?,?,?,?,?,?,?,?) 
		]]>
	</property>
	
	<!-- 根据任务id获取历史任务 -->
	<property name="getHiTaskIdByTaskId">
		<![CDATA[ 
      		SELECT * FROM ACT_HI_TASKINST T WHERE T.ID_=?
		]]>
	</property>
	
	<!-- 根据实例id获取历史任务 -->
	<property name="getHiTaskIdByProcessId">
		<![CDATA[ 
      		select RES.*
			  from ACT_HI_TASKINST RES
			 WHERE RES.PROC_INST_ID_ = ?
			 order by RES.START_TIME_ asc
		]]>
	</property>
	
	<!-- 根据任务id获取节点任务转办信息  gw_tanx -->
	<property name="getNodeChangeInfo_wf">
		<![CDATA[
			SELECT * FROM TD_WF_NODE_CHANGEINFO A WHERE A.TASKID = ?
		]]>
	</property>
	
	<!-- 获取需要发送消息提醒的数据 gw_tanx -->
	<property name="getProcessNodeUnComplete">
		<![CDATA[
			
			SELECT 1                 AS STATE, -- 任务状态（1未签收2未处理）
			       A.ID_             AS TASKID, -- 任务ID
			       A.NAME_           AS TASKNAME, -- 任务名称
			       A.CREATE_TIME_    AS CREATETIME, -- 任务创建时间
			       I.USER_ID_        AS USERID, -- 处理人
			       B.NAME_           AS PROCESSNAME, -- 流程名称
			       A.PROC_INST_ID_   AS PROCINSTANCEID, -- 流程实例ID
			       A.TASK_DEF_KEY_   AS TASKDEFKEY, -- 任务节点KEY
			       A.ALERTTIME       AS ALERTTIME, -- 预警时间点
			       A.OVERTIME        AS OVERTIME, -- 超时时间点
			       C.MESSAGETEMPLEID AS MESSAGETEMPLEID, -- 短信模板
			       C.EMAILTEMPLEID   AS EMAILTEMPLEID, -- 邮件模板
			       D.ENTRUST_USER    AS ENTRUSTUSER-- 委托人
			  FROM ACT_RU_TASK A
			 INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = A.ID_
			  LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
			  LEFT JOIN TD_WF_PROC_MESSTEMPLATE C ON C.PROCESS_KEY = B.KEY_
			  -- 委托关系
			  LEFT JOIN (SELECT A.ENTRUST_USER,
			                    A.START_DATE,
			                    A.END_DATE,
			                    B.PROCDEF_ID,
			                    A.CREATE_USER
			               FROM TD_WF_ENTRUST A
			               LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID =
			                                                          B.ENTRUST_ID
			              WHERE A.STS = '有效') D ON D.CREATE_USER = I.USER_ID_
			                                     AND D.START_DATE <= A.CREATE_TIME_
			                                     AND D.END_DATE >= A.CREATE_TIME_
			
			 WHERE A.ASSIGNEE_ IS NULL
			   and I.TYPE_ = 'candidate'
			   AND A.ALERTTIME is not null
			   AND (A.ADVANCESEND = 0 -- 预警发送 0未发送 1发送成功 2 发送失败
			       OR A.OVERTIMESEND = 0) -- 超时发送 0未发送 1发送成功 2 发送失败
			
			UNION
			
			SELECT 2                 AS STATE,
			       A.ID_             AS TASKID,
			       A.NAME_           AS TASKNAME,
			       A.CREATE_TIME_    AS CREATETIME,
			       A.ASSIGNEE_       AS USERID,
			       B.NAME_           AS PROCESSNAME,
			       A.PROC_INST_ID_   AS PROCINSTANCEID,
			       A.TASK_DEF_KEY_   AS TASKDEFKEY,
			       A.ALERTTIME       AS ALERTTIME,
			       A.OVERTIME        AS OVERTIME,
			       C.MESSAGETEMPLEID AS MESSAGETEMPLEID,
			       C.EMAILTEMPLEID   AS EMAILTEMPLEID,
			       D.ENTRUST_USER    AS ENTRUSTUSER
			  FROM ACT_RU_TASK A
			  LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
			  LEFT JOIN TD_WF_PROC_MESSTEMPLATE C ON C.PROCESS_KEY = B.KEY_
			  -- 委托关系
			  LEFT JOIN (SELECT A.ENTRUST_USER,
			                    A.START_DATE,
			                    A.END_DATE,
			                    B.PROCDEF_ID,
			                    A.CREATE_USER
			               FROM TD_WF_ENTRUST A
			               LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID =
			                                                          B.ENTRUST_ID
			              WHERE A.STS = '有效') D ON D.CREATE_USER = A.ASSIGNEE_
			                                     AND D.START_DATE <= A.CREATE_TIME_
			                                     AND D.END_DATE >= A.CREATE_TIME_
			  
			
			 WHERE A.ASSIGNEE_ IS NOT NULL
			   AND A.ALERTTIME is not null
			   AND (A.ADVANCESEND = 0 -- 预警发送 0未发送 1发送成功 2 发送失败
			       OR A.OVERTIMESEND = 0) -- 超时发送 0未发送 1发送成功 2 发送失败
		]]>
	</property>
	
	<!-- 根据任务id获取需要发送消息提醒的数据 gw_tanx -->
	<property name="getNoSignTaskById">
		<![CDATA[
			
			SELECT A.ID_             AS TASKID, -- 任务ID
			       A.NAME_           AS TASKNAME, -- 任务名称
			       A.CREATE_TIME_    AS CREATETIME, -- 任务创建时间
			       I.USER_ID_        AS USERID, -- 处理人
			       B.NAME_           AS PROCESSNAME, -- 流程名称
			       A.PROC_INST_ID_   AS PROCINSTANCEID, -- 流程实例ID
			       A.TASK_DEF_KEY_   AS TASKDEFKEY, -- 任务节点KEY
			       A.ALERTTIME       AS ALERTTIME, -- 预警时间点
			       A.OVERTIME        AS OVERTIME, -- 超时时间点
			       C.MESSAGETEMPLEID AS MESSAGETEMPLEID, -- 短信模板
			       C.EMAILTEMPLEID   AS EMAILTEMPLEID, -- 邮件模板
			       D.ENTRUST_USER    AS ENTRUSTUSER-- 委托人
			  FROM ACT_RU_TASK A
			 INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = A.ID_
			  LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
			  LEFT JOIN TD_WF_PROC_MESSTEMPLATE C ON C.PROCESS_KEY = B.KEY_
			  -- 委托关系
			  LEFT JOIN (SELECT A.ENTRUST_USER,
			                    A.START_DATE,
			                    A.END_DATE,
			                    B.PROCDEF_ID,
			                    A.CREATE_USER
			               FROM TD_WF_ENTRUST A
			               LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID =
			                                                          B.ENTRUST_ID
			              WHERE A.STS = '有效') D ON D.CREATE_USER = I.USER_ID_
			                                     AND D.START_DATE <= A.CREATE_TIME_
			                                     AND D.END_DATE >= A.CREATE_TIME_
			
			 WHERE A.ASSIGNEE_ IS NULL
			   and I.TYPE_ = 'candidate'
			   AND A.ALERTTIME is not null
			   AND A.ID_ = ?
		]]>
	</property>
	
	<!-- 根据任务id获取需要发送消息提醒的数据 gw_tanx -->
	<property name="getSignedTaskById">
		<![CDATA[
			
			SELECT A.ID_             AS TASKID,
			       A.NAME_           AS TASKNAME,
			       A.CREATE_TIME_    AS CREATETIME,
			       A.ASSIGNEE_       AS USERID,
			       B.NAME_           AS PROCESSNAME,
			       A.PROC_INST_ID_   AS PROCINSTANCEID,
			       A.TASK_DEF_KEY_   AS TASKDEFKEY,
			       A.ALERTTIME       AS ALERTTIME,
			       A.OVERTIME        AS OVERTIME,
			       C.MESSAGETEMPLEID AS MESSAGETEMPLEID,
			       C.EMAILTEMPLEID   AS EMAILTEMPLEID,
			       D.ENTRUST_USER    AS ENTRUSTUSER
			  FROM ACT_RU_TASK A
			  LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
			  LEFT JOIN TD_WF_PROC_MESSTEMPLATE C ON C.PROCESS_KEY = B.KEY_
			  -- 委托关系
			  LEFT JOIN (SELECT A.ENTRUST_USER,
			                    A.START_DATE,
			                    A.END_DATE,
			                    B.PROCDEF_ID,
			                    A.CREATE_USER
			               FROM TD_WF_ENTRUST A
			               LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID =
			                                                          B.ENTRUST_ID
			              WHERE A.STS = '有效') D ON D.CREATE_USER = A.ASSIGNEE_
			                                     AND D.START_DATE <= A.CREATE_TIME_
			                                     AND D.END_DATE >= A.CREATE_TIME_
			  
			
			 WHERE A.ASSIGNEE_ IS NOT NULL
			   AND A.ALERTTIME is not null
			   AND A.ID_ = ?
		]]>
	</property>
	
	<!-- 记录委托处理的任务  gw_tanx -->
	<property name="addEntrustTaskInfo_wf">
		<![CDATA[
			INSERT INTO TD_WF_ENTRUST_TASK (TASKID,CREATE_USER,ENTRUST_USER,PROCESS_ID,PROCESS_KEY,ENTRUSTTIME) 
				VALUES (?,?,?,?,?,?)
		]]>
	</property>
	
	<!-- 记录委托处理的任务  gw_tanx -->
	<property name="getEntrustTaskInfoById_wf">
		<![CDATA[
			SELECT A.* FROM TD_WF_ENTRUST_TASK A WHERE A.TASKID = ?
		]]>
	</property>
	
	<!-- 查询任务的委托记录  gw_tanx -->
	<property name="getEntrustTaskInfoById_wf">
		<![CDATA[
			-- 委托关系
			SELECT 2 TASKRELATION,
			       B.TASKID,
			       B.PROCESS_KEY,
			       B.PROCESS_ID,
			       B.CREATE_USER,
			       B.ENTRUST_USER,
			       B.ENTRUSTTIME CHANGETIME
			  FROM TD_WF_ENTRUST_TASK B
			 WHERE B.TASKID = ?
			
			 ORDER BY CHANGETIME
		]]>
	</property>
	
	<!-- 查询任务的转办记录  gw_tanx -->
	<property name="getChangeTaskInfoById_wf">
		<![CDATA[
			-- 转办关系
			 SELECT CC.ID_,
			       CC.PROC_DEF_ID_,
			       CC.PROC_INST_ID_,
			       CC.EXECUTION_ID_,
			       CC.ACT_ID_,
			       CC.TASK_ID_,
			       CC.CALL_PROC_INST_ID_,
			       CC.ACT_NAME_,
			       CC.ACT_TYPE_,
			       CC.OWNER_,
			       AA.FROM_USER AS ASSIGNEE_,
			       CC.START_TIME_,
			       AA.CHANGETIME AS END_TIME_,
			       CC.DURATION_,
			       CC.DURATION_NODE,
			       CC.IS_CONTAIN_HOLIDAY,
			       CC.ALERTTIME,
			       CC.OVERTIME,
			       CC.ADVANCESEND,
			       CC.OVERTIMESEND,
			       '转办任务' AS BUSSINESS_OP,
			       AA.DELEGATEREASON AS BUSSINESS_REMARK,
			       AA.DELEGATEREMARK AS DELETE_REASON_
			  FROM TD_WF_NODE_CHANGEINFO AA
			  LEFT JOIN ACT_HI_ACTINST CC ON CC.TASK_ID_ = AA.TASKID
			 WHERE AA.PROCESS_ID = ?

		]]>
	</property>
	
	<!-- 记录委托处理的任务  gw_tanx -->
	<property name="getEntrustInfo_wf">
		<![CDATA[
			select d.entrust_user, d.entrust_user_name, d.create_user, d.create_user_name,d.start_date, 
        		d.sts,d.end_date, d.create_date, p.name_ as procdef_name,a.system_name as wf_app_name
			   From TD_WF_ENTRUST_PROC_RELATION c
			   left join td_wf_entrust d on c.entrust_id = d.id
			   left join ACT_RE_PROCDEF p on p.key_ = c.procdef_id
			   left join TD_WF_APP_PROC_RELATION ar on ar.procdef_id = p.key_
			   left join TD_WF_APP a on a.id = ar.wf_app_id
			  where (d.entrust_user = ? or d.create_user = ?)
		]]>
	</property>
	
	<!-- 获取用户的委托关系，权限判断  gw_tanx -->
	<property name="getEntrustRelation_wf">
		<![CDATA[
			SELECT A.ENTRUST_USER, A.START_DATE, A.END_DATE, B.PROCDEF_ID, A.CREATE_USER
			  FROM TD_WF_ENTRUST A
			  LEFT JOIN TD_WF_ENTRUST_PROC_RELATION B ON A.ID = B.ENTRUST_ID
			 WHERE A.STS = '有效'
			   AND A.ENTRUST_USER = ?
			   AND (B.PROCDEF_ID = ? OR B.PROCDEF_ID IS NULL)
			   AND A.START_DATE <= ?
			   AND A.END_DATE >= ?
		]]>
	</property>
	
	<!-- 获取节点任务配置关系，权限判断  gw_tanx-->
	<property name="getNodeCandidates_wf">
		<![CDATA[
			SELECT *
			  FROM ACT_RU_IDENTITYLINK I 
			 WHERE 1=1
			   and I.TYPE_ = 'candidate'
			   and I.TASK_ID_=?
			   and I.USER_ID_=?
		]]>
	</property>
	
	<!-- 处理日志记录  gw_tanx-->
	<property name="addDealTaskInfo_wf">
		<![CDATA[
			INSERT INTO TD_WF_DEAL_TASK
					  (DEALID,
					   TASKID,
					   DEALUSER,
					   DEALUSERNAME,
					   DEALTYPE,
					   PROCESS_ID,
					   PROCESS_KEY,
					   DEALTIME,
					   DEALREMARK,
					   DEALOPTION,
					   DEALREASON)
					VALUES
					  (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
		]]>
	</property>
	
	<!-- 获取当前流程实例下处理过的节点集合  gw_tanx-->
	<property name="getTaskKeyList_wf">
		<![CDATA[
			SELECT DISTINCT T.ACT_ID_, T.ACT_NAME_
			  FROM ACT_HI_ACTINST T
			 WHERE 	T.ACT_TYPE_ = 'userTask'  
			   AND	T.PROC_INST_ID_ = ?
			 ORDER BY T.ACT_ID_
		]]>
	</property>
	
	<!-- 获取当前流程实例下节点控制信息  gw_tanx-->
	<property name="getNodeControlParamByProcessId_wf">
		<![CDATA[
			select B.NODE_KEY,
			       B.NODE_DESCRIBE,
			       B.NODE_NAME,
			       B.DURATION_NODE / 1000 / 60 / 60 AS DURATION_NODE,
			       B.IS_VALID,
			       B.IS_EDIT,
			       B.IS_AUTO,
			       B.IS_RECALL,
			       B.IS_EDITAFTER,
			       B.IS_DISCARD,
			       B.IS_COPY,
			       B.IS_CANCEL,
			       B.IS_AUTOAFTER,
			       B.IS_MULTI,
			       B.IS_SEQUENTIAL,
			       B.TASK_URL,
			       B.NODE_DESCRIBE,
			       B.BUSSINESSCONTROLCLASS
			  from td_wf_node_worktime b
			  LEFT JOIN TD_WF_ACTIVITI_NODE_INFO A ON A.PROCESS_KEY = B.PROCESS_KEY
                                      AND A.NODE_KEY = B.NODE_KEY
			 where b.process_id = ?
			 order by a.order_num
		]]>
	</property>
	
	<!-- 获取当前流程实例下节点控制信息  gw_tanx-->
	<property name="getHiNodeControlParamByProcessId_wf">
		<![CDATA[
			select B.NODE_KEY,
			       B.NODE_DESCRIBE,
			       B.NODE_NAME,
			       B.DURATION_NODE / 1000 / 60 / 60 AS DURATION_NODE,
			       B.IS_VALID,
			       B.IS_EDIT,
			       B.IS_AUTO,
			       B.IS_RECALL,
			       B.IS_EDITAFTER,
			       B.IS_DISCARD,
			       B.IS_COPY,
			       B.IS_CANCEL,
			       B.IS_AUTOAFTER,
			       B.IS_MULTI,
			       B.IS_SEQUENTIAL,
			       B.TASK_URL,
			       B.NODE_DESCRIBE,
			       B.BUSSINESSCONTROLCLASS
			  from td_wf_node_hi_worktime b
			  LEFT JOIN TD_WF_ACTIVITI_NODE_INFO A ON A.PROCESS_KEY = B.PROCESS_KEY
                                      AND A.NODE_KEY = B.NODE_KEY
			 where b.process_id = ?
			 order by a.order_num
		]]>
	</property>
	
	<!-- 获取驳回日志记录  gw_tanx-->
	<property name="getRejectlog_wf">
		<![CDATA[
			SELECT * FROM TD_WF_REJECTLOG T WHERE T.OPTYPE = 0 AND T.NEWTASKID=?
		]]>
	</property>
	
	<!-- 判断是否签收  gw_tanx-->
	<property name="isSign_wf">
		<![CDATA[
			SELECT A.ASSIGNEE_ FROM ACT_RU_TASK A
		 	WHERE A.Id_ = ?
		]]>
	</property>
	
	<!-- TD_WF_NODE_WORKTIME表数据归档  gw_tanx-->
	<property name="backupWorktimeToHi_wf-oracle">
		<![CDATA[
			INSERT INTO TD_WF_NODE_HI_WORKTIME
  				(SELECT T.*,to_date(#[backuptime],'YYYY-MM-dd HH24:mi:ss') FROM TD_WF_NODE_WORKTIME T WHERE T.PROCESS_ID = #[processId])
		]]>
	</property>
	
	<property name="backupWorktimeToHi_wf-mysql">
		<![CDATA[
			INSERT INTO TD_WF_NODE_HI_WORKTIME
  				(SELECT T.*,str_to_date(#[backuptime],'%Y-%m-%d %H-%i-%s') FROM TD_WF_NODE_WORKTIME T WHERE T.PROCESS_ID = #[processId])
		]]>
	</property>
	
</properties>