<?xml version="1.0" encoding="UTF-8"?>

<properties>

	<property name="queryProdef">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_, P.SUSPENSION_STATE_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id,
			app.system_name as wf_app_name, E.MESSAGETEMPLEID,E.MESSAGETEMPLETITLE,E.EMAILTEMPLEID, E.EMAILTEMPLETITLE, E.NOTICEID, E.IS_CONTAIN_HOLIDAY
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			left join td_wf_app_proc_relation pr on pr.procdef_id = p.ID_
			left join td_wf_app app on app.id = pr.wf_app_id
			LEFT JOIN (SELECT A.PROCESS_KEY,
			 		A.IS_CONTAIN_HOLIDAY,
					A.NOTICEID,
                    A.MESSAGETEMPLEID,
                    B.TEMPLETITLE AS MESSAGETEMPLETITLE,
                    A.EMAILTEMPLEID,
                    C.TEMPLETITLE AS EMAILTEMPLETITLE
               FROM TD_WF_PROC_MESSTEMPLATE A
               LEFT JOIN TD_WF_MESSTEMPLATE B ON A.MESSAGETEMPLEID = B.TEMPLEID
               LEFT JOIN TD_WF_MESSTEMPLATE C ON A.EMAILTEMPLEID = C.TEMPLEID) E ON E.PROCESS_KEY = P.KEY_
			 
			where p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)
			#if($processKey && !$processKey.equals(""))
				and p.key_ like #[processKey]
			#end
			#if($resourceName && !$resourceName.equals(""))
				and p.resource_name_ like #[resourceName]
			#end
			#if($processName && !$processName.equals(""))
				and p._ like #[processName]
			#end
			#if($businesstype_id && !$businesstype_id.equals(""))
				and b.business_id = #[businesstype_id]
			#end
			#if($deploymentId && !$deploymentId.equals(""))
				and d.id_ = #[deploymentId]
			#end
			#if($wf_app_id && !$wf_app_id.equals(""))
				and p.ID_ in (select procdef_id from td_wf_app_proc_relation where wf_app_id = #[wf_app_id])
			#end
			#if($wf_app_name && !$wf_app_name.equals(""))
				and p.ID_ in (select procdef_id from td_wf_app_proc_relation r,td_wf_app a where a.id=r.wf_app_id and (a.system_id like #[wf_app_name] or a.system_name like #[wf_app_name]))
			#end
			#if($wf_app_mode_type_nonexist && !$wf_app_mode_type_nonexist.equals(""))
				and p.ID_ not in (select procdef_id from td_wf_app_proc_relation r,td_wf_app a where a.id=r.wf_app_id and a.app_mode_type like #[wf_app_mode_type_nonexist])
			#end
			
		]]>
	</property>
	
	<!-- 获取运行时流程实例信息  gw_tanx-->
	<property name="queryProInstById_wf">
		<![CDATA[
			SELECT * FROM ACT_RU_EXECUTION A WHERE A.ID_=?
		]]>
	</property>
	
	<!-- 获取运行时流程实例信息  gw_tanx-->
	<property name="queryProInstListById_wf">
		<![CDATA[
			SELECT * FROM ACT_RU_EXECUTION A WHERE A.PROC_INST_ID_=? ORDER BY A.IS_ACTIVE_,A.REV_ DESC
		]]>
	</property>
	
	<!-- 流程实例列表数据  gw_tanx-->
	<property name="queryProInst_wf">
		<![CDATA[
			SELECT A.ID_,
		       A.PROC_INST_ID_,
		       A.BUSINESS_KEY_,
		       A.PROC_DEF_ID_,
		       A.START_TIME_,
		       A.END_TIME_,
		       A.DURATION_,
		       A.START_USER_ID_,
		       A.START_ACT_ID_,
		       A.END_ACT_ID_,
		       A.SUPER_PROCESS_INSTANCE_ID_,
		       A.DELETE_REASON_,
		       B.NAME_,
       		   B.KEY_,
		       B.VERSION_,
		       C.BUSINESS_NAME,
		       D.SUSPENSION_STATE_
		  FROM ACT_HI_PROCINST A
		  LEFT JOIN ACT_RE_PROCDEF B ON A.PROC_DEF_ID_ = B.ID_
		  LEFT JOIN ACT_RU_EXECUTION D ON A.PROC_INST_ID_ = D.ID_
		  
		  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
	          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
	         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) C ON B.KEY_ = C.PROCESS_KEY
		  
			WHERE 1=1
			
			#if($wf_key && !$wf_key.equals(""))
				AND B.KEY_ like #[wf_key]
			#end
			
			#if($wf_Inst_Id && !$wf_Inst_Id.equals(""))
				and A.ID_ like #[wf_Inst_Id]
			#end
			
			#if($wf_start_time1 && !$wf_start_time1.equals(""))
				and A.START_TIME_ >= TO_TIMESTAMP(#[wf_start_time1], 'YYYY-MM-DD HH24:MI:SS')
			#end
			
			#if($wf_start_time2 && !$wf_start_time2.equals(""))
				and A.START_TIME_ <= TO_TIMESTAMP(#[wf_start_time2], 'YYYY-MM-DD HH24:MI:SS')
			#end
			
			#if($wf_end_time1 && !$wf_end_time1.equals(""))
				and A.END_TIME_ >= TO_TIMESTAMP(#[wf_end_time1], 'YYYY-MM-DD HH24:MI:SS')
			#end
			
			#if($wf_end_time2 && !$wf_end_time2.equals(""))
				and A.END_TIME_ <= TO_TIMESTAMP(#[wf_end_time2], 'YYYY-MM-DD HH24:MI:SS')
			#end
			
			--流程状态 1 激活 2 挂起 3 流程结束 
			#if($wf_state && $wf_state.equals("3"))
				AND D.SUSPENSION_STATE_ IS NULL
			#elseif ($wf_state && $wf_state.equals("1"))
				AND D.SUSPENSION_STATE_ = 1
			#elseif ($wf_state && $wf_state.equals("2"))
				AND D.SUSPENSION_STATE_ = 2
			#end
			
			#if($wf_versions)
      			AND B.VERSION_ IN ( 
      				#foreach($wf_version in $wf_versions)
						#if($velocityCount == 0)
							#[wf_versions[$velocityCount]]
						#else
							,#[wf_versions[$velocityCount]]
						#end
					#end
      			)
			#end
			
			#if($wf_business_key && !$wf_business_key.equals(""))
				AND A.BUSINESS_KEY_ like #[wf_business_key]
			#end
			
			#if($businessTypeId && !$businessTypeId.equals(""))
				and C.business_id = #[businessTypeId]
			#end
			
			ORDER BY A.START_TIME_ DESC
		]]>
	</property>
	
	<property name="queryProdefByKey">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? and p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)
				
			
			
		]]>
	</property>
	
	<property name="queryProdefByKeywithVersion">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? and p.version_ = ?
				
			
			
		]]>
	</property>
	
	<property name="queryProdefHisVersion">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_,b.business_name,b.business_id
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			join (select wb.business_name,wb.business_id,wpb.process_key from td_wf_businesstype wb,td_wf_pro_businesstype wpb where wb.business_id = wpb.businesstype_id) b on p.key_=b.process_key			
			where p.key_ = ? 
			order by p.version_ desc]]>
	</property>
	
	
	
	
	<property name="getUnloadProcesses">
		<![CDATA[
			select p.ID_,p.name_,p.key_,p.version_ ,p.resource_name_,p.dgrm_resource_name_,p.category_,
			d.name_ as DEPLOYMENT_NAME_,d.deploy_time_ as DEPLOYMENT_TIME_,d.id_ as DEPLOYMENT_ID_
			from act_re_procdef p
			join act_re_deployment d on p.deployment_id_=d.id_
			left join td_wf_pro_businesstype b on p.key_=b.process_key
			where p.key_ not in (select process_key from td_wf_pro_businesstype) and p.version_ = (select max(VERSION_) from ACT_RE_PROCDEF where KEY_ = p.KEY_)			
		]]>
	</property>

	<property name="selectTaskByUser">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t 
			inner join act_ru_identitylink i on t.id_=i.task_id_ and i.user_id_ = ?
			inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_= ?
		]]>
	</property>
	
	<!-- 获取所有任务的未签收人员(处理人)  gw_tanx-->
	<property name="getCandidatorList_wf">
		<![CDATA[
			SELECT I.USER_ID_, RES.ID_
			  FROM ACT_RU_TASK RES
			 INNER JOIN ACT_RU_IDENTITYLINK I ON I.TASK_ID_ = RES.ID_
			 WHERE RES.ASSIGNEE_ IS NULL
			   AND I.TYPE_ = 'candidate'
			   
			   #if($wf_Inst_Id && !$wf_Inst_Id.equals(""))
			   		AND RES.PROC_INST_ID_=#[wf_Inst_Id]
			   #end
			   
			   #if($wf_key && !$wf_key.equals(""))
					AND EXISTS (SELECT 1
			          FROM ACT_RE_PROCDEF B
			         WHERE B.KEY_ = #[wf_key]
			           AND B.ID_ = RES.PROC_DEF_ID_)
			   #end
			   
		]]>
	</property>
	
	<!-- 根据流程实例id获取当前任务信息  gw_tanx-->
	<property name="getTaskInfoByInstId_wf">
		<![CDATA[
			SELECT A.ID_,
		       A.REV_,
		       A.EXECUTION_ID_,
		       A.PROC_INST_ID_,
		       A.PROC_DEF_ID_,
		       A.NAME_,
		       A.PARENT_TASK_ID_,
		       A.DESCRIPTION_,
		       A.TASK_DEF_KEY_,
		       A.OWNER_,
		       A.ASSIGNEE_,
		       A.DELEGATION_,
		       A.PRIORITY_,
		       A.CREATE_TIME_,
		       A.DUE_DATE_,
		       A.SUSPENSION_STATE_
		  FROM ACT_RU_TASK A
		 WHERE A.PROC_INST_ID_ = ?
		]]>
	</property>
	
	<!-- 根据任务id获取处理人列表  gw_tanx-->
	<property name="getCandidatorOftask_wf">
		<![CDATA[
			SELECT I.USER_ID_,I.GROUP_ID_
			  FROM ACT_RU_IDENTITYLINK I 
			 WHERE 1=1
			   and I.TYPE_ = 'candidate'
			   and I.TASK_ID_=?
		]]>
	</property>
	
	<!-- 工作流管理中查看明细列表  gw_tanx-->
	<property name="selectTaskHistorById_wf">
		<![CDATA[
			SELECT A.ID_,
			       T.PROC_DEF_ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.ACT_ID_,
			       T.TASK_ID_,
			       T.CALL_PROC_INST_ID_,
			       T.ACT_NAME_,
			       T.ACT_TYPE_,
			       T.ASSIGNEE_,
			       T.START_TIME_,
			       A.CLAIM_TIME_,
			       T.END_TIME_,
			       A.DELETE_REASON_,
			       T.DURATION_ 
			  FROM ACT_HI_ACTINST T
			  LEFT JOIN ACT_HI_TASKINST A ON T.TASK_ID_ = A.ID_
			  
			 WHERE 1=1 
			  
			 AND T.PROC_INST_ID_ = ?
			
			ORDER BY T.START_TIME_ ,T.END_TIME_
		]]>
	</property>
	
	<!-- 工作流管理中查看任务列表  gw_tanx-->
	<property name="selectTaskByUser_wf">
		<![CDATA[
		--taskState签收状态字段 0 所有 1 未签收 2 签收
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("1")))
				select distinct 1 as state,A.BUSINESS_KEY_,B.KEY_,D.BUSINESS_NAME,RES.*
				  from ACT_RU_TASK RES
				  
				 inner join ACT_RU_IDENTITYLINK I on I.TASK_ID_ = RES.ID_
				 LEFT JOIN ACT_RU_EXECUTION A ON RES.EXECUTION_ID_ = A.ID_
				 LEFT JOIN ACT_RE_PROCDEF B ON B.ID_ = A.PROC_DEF_ID_
				 
				 #if($processKey && !$processKey.equals(""))
				 	AND B.KEY_ like #[processKey]
				 #end
				  	
				 JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON B.KEY_ = D.PROCESS_KEY
				                                                          
				 WHERE RES.ASSIGNEE_ is null
				   		and I.TYPE_ = 'candidate'
				   
				   #if($isAdmin == false)
				   		and (I.USER_ID_ = #[assignee])
				   #end
				   
				   #if($processIntsId && !$processIntsId.equals(""))
				 		AND RES.PROC_INST_ID_ like #[processIntsId]
			 	   #end
			 	   
			 	   #if($taskName && !$taskName.equals(""))
				 		AND RES.NAME_ like #[taskName]
			 	   #end
				   
				   #if($taskId && !$taskId.equals(""))
					   	AND RES.ID_ like #[taskId]
				   #end
				   
				   #if($businessTypeId && !$businessTypeId.equals(""))
					   	and D.business_id = #[businessTypeId]
				   #end
				   
				   #if($businessKey && !$businessKey.equals(""))
					   	and A.BUSINESS_KEY_ like #[businessKey]
				   #end
				   
			#end
			
			#if($taskState && $taskState.equals("0"))
			 	union 
			#end
			
			#if($taskState && ( $taskState.equals("0") || $taskState.equals("2")))
				select distinct 2 as state,B.BUSINESS_KEY_,C.KEY_, D.BUSINESS_NAME,a.*
				  from ACT_RU_TASK a
				  
				  LEFT JOIN ACT_RU_EXECUTION B ON A.EXECUTION_ID_ = B.ID_
				  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
				  
				  #if($processKey && !$processKey.equals(""))
				 	AND C.KEY_ like #[processKey]
				  #end
				 
				  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
				          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
				         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
				         
				  WHERE 1=1
				  
				  #if($isAdmin == false)
				   	and a.ASSIGNEE_ = #[assignee]
				  #else
				    and a.ASSIGNEE_ is not null
				  #end
				  
				  #if($processIntsId && !$processIntsId.equals(""))
				 	AND a.PROC_INST_ID_ like #[processIntsId]
			 	  #end
			 	   
			 	  #if($taskName && !$taskName.equals(""))
				 	AND a.NAME_ like #[taskName]
			 	  #end
				  
				  #if($taskId && !$taskId.equals(""))
					  AND A.ID_ like #[taskId]
				  #end
				  
				  #if($businessTypeId && !$businessTypeId.equals(""))
					  and D.business_id = #[businessTypeId]
				  #end
				  
				  #if($businessKey && !$businessKey.equals(""))
					  and B.BUSINESS_KEY_ like #[businessKey]
				  #end
			#end
			
			--以CREATE_TIME_字段排序，不能直接写字段名， 字段列序号
			ORDER BY 18 DESC  
		]]>
	</property>
	
	<!-- 工作流管理中查看任务列表  gw_tanx-->
	<property name="selectHistoryTask_wf">
		<![CDATA[
			SELECT B.BUSINESS_KEY_, C.KEY_, D.BUSINESS_NAME, A.*
			
			  FROM ACT_HI_TASKINST A
			  LEFT JOIN ACT_HI_PROCINST B ON A.EXECUTION_ID_ = B.ID_
			  LEFT JOIN ACT_RE_PROCDEF C ON C.ID_ = B.PROC_DEF_ID_
			  
			  #if($processKey && !$processKey.equals(""))
				AND C.KEY_ like #[processKey]
			  #end
			                          
			  JOIN (SELECT WB.BUSINESS_NAME, WB.BUSINESS_ID, WPB.PROCESS_KEY
			          FROM TD_WF_BUSINESSTYPE WB, TD_WF_PRO_BUSINESSTYPE WPB
			         WHERE WB.BUSINESS_ID = WPB.BUSINESSTYPE_ID) D ON C.KEY_ = D.PROCESS_KEY
			         
			 WHERE A.END_TIME_ IS NOT NULL
			 
			  #if($isAdmin == false)
				AND A.ASSIGNEE_ = #[assignee]
			  #end
			 
			  #if($processIntsId && !$processIntsId.equals(""))
			 	AND A.PROC_INST_ID_ like #[processIntsId]
		 	  #end
		 	   
		 	  #if($taskName && !$taskName.equals(""))
			 	AND A.NAME_ like #[taskName]
		 	  #end
			  
			  #if($taskId && !$taskId.equals(""))
				  AND A.ID_ like #[taskId]
			  #end
			  
			  #if($businessTypeId && !$businessTypeId.equals(""))
				  and D.business_id = #[businessTypeId]
			  #end
			  
			  #if($businessKey && !$businessKey.equals(""))
				  and B.BUSINESS_KEY_ like #[businessKey]
			  #end
		]]>
	</property>
	
	<property name="selectGroupByUser">
		<![CDATA[
			select g.group_name from td_sm_group g inner join  td_sm_usergroup ug on g.group_id=ug.group_id 
			where ug.user_id=(select u.user_id from td_sm_user u where u.user_name=?)
		]]>
	</property>
	
	<property name="selectTaskByGroup">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t
      		inner join act_ru_identitylink i on t.id_=i.task_id_ and i.group_id_ = ? 
      		inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_= ?
		]]>
	</property>
	
	<property name="selectAllTaskByUser">
		<![CDATA[
			select  t.id_ as id,t.execution_id_ as executionId,t.proc_inst_id_ as processInstanceId ,
			t.proc_def_id_ as processDefinitionId,t.name_ as name ,t.task_def_key_ as taskDefinitionKey  from act_ru_task t
      		left join act_ru_identitylink i on t.id_=i.task_id_  
      		#if($processKeys)
      			inner join act_re_procdef p on t.proc_def_id_ = p.id_ and p.key_ in (
      				#foreach($processKey in $processKeys)
							#if($velocityCount == 0)
								#[processKeys[$velocityCount]]
							#else
								,#[processKeys[$velocityCount]]
							#end
						#end
      			)
			#end
      		where i.user_id_ = #[username] 
      		or i.group_id_ in (select g.group_name from td_sm_group g inner join  td_sm_usergroup ug on g.group_id=ug.group_id 
			where ug.user_id=(select u.user_id from td_sm_user u where u.user_name= #[username] )) 
			or t.assignee_ = #[username]
			order by  t.create_time_ desc
		]]>
	</property>
	
	<property name="listTaskAndVarsByUserWithState">
		<![CDATA[ select var.*,user1.USER_REALNAME name_,
            user2.USER_REALNAME SenderName,user3.USER_REALNAME mainSenderName from (
            select 
                max(il.USER_ID_)  user_id_,
                il.task_id_,max(task.CREATE_TIME_) CREATE_TIME_,
                max(task.TASK_DEF_KEY_) TASK_DEF_KEY_,max(exec.BUSINESS_KEY_) business_key_,
                max(var.EXECUTION_ID_) EXECUTION_ID_,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Url') then var.TEXT_ else null end)  url
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'User') then var.TEXT_ else null end)  variable_user
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Sender')  then var.TEXT_ else null end)  sender
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Title')  then var.TEXT_ else null end)  title
                                ,max(case when var.NAME_ = 'state' then var.TEXT_ else null end)  state
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                left join act_ru_variable var on task.PROC_INST_ID_ = var.PROC_INST_ID_
                left join act_ru_execution exec on task.PROC_INST_ID_ = exec.PROC_INST_ID_
                where il.USER_ID_=#[userAccount] and EXISTS (select 1 from act_ru_variable b
                where b.PROC_INST_ID_ = var.PROC_INST_ID_ and b.NAME_='state' and b.TEXT_=#[state])
                and INSTR(task.PROC_DEF_ID_ ,#[processkey]) > 0
                group by il.TASK_ID_)  var 
            left join td_sm_user user1 on var.user_id_=user1.USER_NAME 
            left join td_sm_user user2 on var.sender=user2.USER_NAME
            left join td_sm_user user3 on var.sender=user3.USER_NAME 
            order by CREATE_TIME_ desc
		]]>
	</property>
	<property name="listTaskAndVarsByUserWithStates">
		<![CDATA[ select var.*,user1.USER_REALNAME name_,
            user2.USER_REALNAME SenderName,user3.USER_REALNAME mainSenderName from (
            select 
                max(il.USER_ID_)  user_id_,
                il.task_id_,max(task.CREATE_TIME_) CREATE_TIME_,
                max(task.TASK_DEF_KEY_) TASK_DEF_KEY_,max(exec.BUSINESS_KEY_) business_key_,
                max(var.EXECUTION_ID_) EXECUTION_ID_,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Url') then var.TEXT_ else null end)  url
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'User') then var.TEXT_ else null end)  variable_user
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Sender')  then var.TEXT_ else null end)  sender
                                ,max(case when var.NAME_ = CONCAT(task.TASK_DEF_KEY_,'Title')  then var.TEXT_ else null end)  title
                                ,max(case when var.NAME_ = 'state' then var.TEXT_ else null end)  state
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                left join act_ru_variable var on task.PROC_INST_ID_ = var.PROC_INST_ID_
                left join act_ru_execution exec on task.PROC_INST_ID_ = exec.PROC_INST_ID_
                where il.USER_ID_=#[userAccount] 
                and EXISTS (select 1 from act_ru_variable b
                                    where b.PROC_INST_ID_ = var.PROC_INST_ID_ and b.NAME_='state' 
                                    #if($states && !$states.equals(""))
					                   and b.TEXT_ in(
					                   #foreach($state in $states)
					                       #if($velocityCount == 0)
					                          #[states[$velocityCount]]
					                       #else
					                          , #[states[$velocityCount]]
					                       #end
					                   #end
					                   )
					                #end
                            )
                #if($processkeys && !$processkeys.equals(""))
                   and (substr(task.PROC_DEF_ID_, 0, instr(task.PROC_DEF_ID_, ':')-1) in(
                   #foreach($processkey in $processkeys)
                       #if($velocityCount == 0)
                          #[processkeys[$velocityCount]]
                       #else
                          , #[processkeys[$velocityCount]]
                       #end
                   #end
                   )
                #end
                )
                group by il.TASK_ID_)  var 
            left join td_sm_user user1 on var.user_id_=user1.USER_NAME 
            left join td_sm_user user2 on var.sender=user2.USER_NAME
            left join td_sm_user user3 on var.sender=user3.USER_NAME 
            order by CREATE_TIME_ desc
		]]>
	</property>
	<property name="countlistTaskAndVarsByUserWithState">
		<![CDATA[ 
           select 
                count(1)
                from
                (
                select il.*
                from
                act_ru_identitylink il
                left join act_ru_task task on il.TASK_ID_ = task.ID_
                where il.USER_ID_=#[userAccount] 
               and EXISTS (select 1 from act_ru_variable b
                       where b.PROC_INST_ID_ = task.PROC_INST_ID_ and b.NAME_='state' and b.TEXT_=#[state])
                and INSTR(task.PROC_DEF_ID_ ,#[processkey]) > 0 
               )
		]]>
	</property>
	
	<property name="countlistTaskAndVarsByUserWithStates">
		<![CDATA[ 
           select 
                count(1)
                from
                (
	                select il.*
	                from
	                act_ru_identitylink il
	                left join act_ru_task task on il.TASK_ID_ = task.ID_
	                where il.USER_ID_=#[userAccount] 
	                and EXISTS (
	                    select 1 from act_ru_variable b
	                         where b.PROC_INST_ID_ = task.PROC_INST_ID_ and b.NAME_='state'
	                               #if($states && !$states.equals(""))
				                   and b.TEXT_ in(
				                   #foreach($state in $states)
				                       #if($velocityCount == 0)
				                          #[states[$velocityCount]]
				                       #else
				                          , #[states[$velocityCount]]
				                       #end
				                   #end
				                   )
				                #end
	                     )
	                #if($processkeys && !$processkeys.equals(""))
	                   and (substr(task.PROC_DEF_ID_, 0, instr(task.PROC_DEF_ID_, ':')-1) in(
	                   #foreach($processkey in $processkeys)
	                       #if($velocityCount == 0)
	                          #[processkeys[$velocityCount]]
	                       #else
	                          , #[processkeys[$velocityCount]]
	                       #end
	                   #end
	                   )
	                #end
	                )
            )
		]]>
	</property>
	
	<property name="queryHisTask">
		<![CDATA[
			select t.id_ as id,t.proc_def_id_ as processDefinitionId ,t.task_def_key_ as taskDefinitionKey,t.proc_inst_id_ as processInstanceId,
			t.execution_id_ as executionId,t.parent_task_id_ as parentTaskId,t.name_ as name,t.description_ as description,t.owner_ as owner,
			t.assignee_ as assignee,t.start_time_ as startTime,t.end_time_ as endTime,t.delete_reason_ as deleteReason
			from act_hi_taskinst t where 
			assignee_ =#[username] and   t.end_time_ is not null
			#if($processKeys)
				and proc_def_id_ in (select ID_ from act_re_procdef where key_ in(
					#foreach($processKey in $processKeys)
							#if($velocityCount == 0)
								#[processKeys[$velocityCount]]
							#else
								,#[processKeys[$velocityCount]]
							#end
					#end
				)
				)
			#end
		]]>
	</property>
	
	<property name="queryHisTaskById">
		<![CDATA[
			SELECT T.ID_             AS ID,
		           T.PROC_DEF_ID_    AS PROCESSDEFINITIONID,
		           T.TASK_DEF_KEY_   AS TASKDEFINITIONKEY,
		           T.PROC_INST_ID_   AS PROCESSINSTANCEID,
		           T.EXECUTION_ID_   AS EXECUTIONID,
		           T.PARENT_TASK_ID_ AS PARENTTASKID,
		           T.NAME_           AS NAME,
		           T.DESCRIPTION_    AS DESCRIPTION,
		           T.OWNER_          AS OWNER,
		           T.ASSIGNEE_       AS ASSIGNEE,
		           T.START_TIME_     AS STARTTIME,
		           T.END_TIME_       AS ENDTIME,
		           T.DELETE_REASON_  AS DELETEREASON
		      FROM ACT_HI_TASKINST T
		     WHERE 1=1
		     
		     #if($processInstId && !$processInstId.equals(""))
				 AND T.PROC_INST_ID_ = #[processInstId]
			 #end
			 
			 #if($processDefId && !$processDefId.equals(""))
				 AND T.PROC_DEF_ID_ = #[processDefId]
			 #end
			 
			 #if($processKey && !$processKey.equals(""))
				 AND EXISTS
				 (SELECT 1 FROM ACT_RE_PROCDEF A WHERE A.KEY_ = #[processKey]
				 AND T.PROC_DEF_ID_ = A.ID_)
			 #end
		]]>
	</property>
	
	<property name="selectOrgByParentId">
		<![CDATA[
			select  org_id as id,org_name as text from td_sm_organization  where parent_id=?
		]]>
	</property>
	
	<property name="selectOrgNameByOrgId">
		<![CDATA[
			select org_name from td_sm_organization  where org_id=?
		]]>
	</property>
	
	<property name="selectActivitiNodeInfoByKeys">
		<![CDATA[
			select * from td_wf_activiti_node_info where process_key=#[process_key] and node_key=#[node_key]
		]]>
	</property>
	
	<property name="existNodeinfo">
		<![CDATA[
			select count(1) from td_wf_activiti_node_info where process_key=? and node_key=?
		]]>
	</property>
	
	<property name="selectActivitiNodeCandidateByNodeId">
		<![CDATA[
			select * from td_wf_activiti_node_candidate where node_id=#[node_id] and org_id=#[org_id]
		]]>
	</property>
	
	<property name="selectUserInfoByNames">
		<![CDATA[
			select u.user_id ,u.user_name ,u.user_realname ,u.user_worknumber  
			,org.org_name ,j.job_name 
			from td_sm_userjoborg oj inner join  td_sm_user u on u.user_id=oj.user_id 
			inner join td_sm_organization org on oj.org_id=org.org_id
			inner join td_sm_job j on oj.job_id = j.job_id
			 where u.user_name in (
						#foreach($user in $usernames)
							#if($velocityCount == 0)
								#[usernames[$velocityCount]]
							#else
								,#[usernames[$velocityCount]]
							#end
						#end
						)
		]]>
	</property>
	
	<property name="selectUserRealNameByName">
		<![CDATA[
			select user_realname from td_sm_user where user_name=?
		]]>
	</property>
	
	<property name="selectUsersByCondition">
		<![CDATA[
			select u.user_id ,u.user_name ,u.user_realname ,u.user_worknumber  
			,org.org_name ,j.job_name
			from td_sm_userjoborg oj inner join  td_sm_user u on u.user_id=oj.user_id 
			inner join td_sm_organization org on oj.org_id=org.org_id
			inner join td_sm_job j on oj.job_id = j.job_id
			where 1=1 
			#if($org_id && !$org_id.equals(""))
				and oj.org_id = #[org_id]
			#end
			#if($user_worknumber && !$user_worknumber.equals(""))
				and u.user_worknumber like #[user_worknumber]
			#end
			#if($user_realname && !$user_realname.equals(""))
				and u.user_realname like #[user_realname]
			#end
			#if($user_name && !$user_name.equals(""))
				and u.user_name like #[user_name]
			#end
		]]>
	</property>
	
	<property name="selectGroupInfoByNames">
		<![CDATA[
			select t.*,u.user_realname as owner_name from td_sm_group t inner join td_sm_user u on t.owner_id = u.user_id 
			 where t.group_name in (
			#foreach($group in $groups)
							#if($velocityCount == 0)
								#[groups[$velocityCount]]
							#else
								,#[groups[$velocityCount]]
							#end
						#end
						)
		]]>
	</property>
	
	<property name="selectActivitiNodeCandidateById">
		<![CDATA[
			select * from td_wf_activiti_node_candidate where id=#[id]
		]]>
	</property>
	
	<property name="selectActivitiNodeInfoById">
		<![CDATA[
			select * from td_wf_activiti_node_info where id=#[id]
		]]>
	</property>
	
	<property name="selectActivitiNodeInfoIDByNodeKey">
		<![CDATA[
			select * from td_wf_activiti_node_info where process_key=? and node_key=?
		]]>
	</property>
	
	<property name="insertActivitiNodeInfo">
		<![CDATA[
			insert into td_wf_activiti_node_info(ID,
        PROCESS_KEY,
        NODE_KEY,
        NODE_NAME,
        NODE_TYPE,
        ORDER_NUM
    ) values(#[id],#[process_key],#[node_key],#[node_name],#[node_type],#[order_num])
		]]>
	</property>
	
	<property name="deleteActivitiNodeInfoByKey">
		<![CDATA[
			delete from  td_wf_activiti_node_info where process_key=#[process_key]
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidataByKey">
		<![CDATA[
			 delete from td_wf_activiti_node_candidate where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	<!-- 清理冗余的流程节点配置 -->
	<property name="deleteNotexistActivitiNodeCandidataByKey">
		<![CDATA[
			 delete from td_wf_activiti_node_candidate where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key] and node_key not in (
                  	#foreach($key in $nodekey)  
                            #if($velocityCount == 0)  
                              #[nodekey[$velocityCount]]  
                            #else  
                               ,#[nodekey[$velocityCount]]  
                           #end  
                        #end  
                  	
                  ))
		]]>
	</property>
	
	<property name="deleteNodevariableByKey">
		<![CDATA[
			 delete from td_wf_nodevariable where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	
	<property name="deleteNotexistNodevariableByKey">
		<![CDATA[
			 delete from td_wf_nodevariable where node_id in 
                  (select id from td_wf_activiti_node_info where process_key=#[process_key]  and node_key not in (
                  	#foreach($key in $nodekey)  
                            #if($velocityCount == 0)  
                              #[nodekey[$velocityCount]]  
                            #else  
                               ,#[nodekey[$velocityCount]]  
                           #end  
                        #end  
                  	
                  ))
		]]>
	</property>
	
	
	<property name="insertActivitiNodeCandidate">
		<![CDATA[
			insert into td_wf_activiti_node_candidate
  			(id, node_id, candidate_groups_id, candidate_groups_name, candidate_users_id, 
  			 candidate_users_name, business_id, business_type, create_date, create_person_id,
   			create_person_name, is_valid, is_edit_candidate, candidate_orgs_id, candidate_orgs_name, 
  			 candidate_jobs_id, candidate_jobs_name, candidate_roles_id, candidate_roles_name,
  			 MESSAGETEMPLEID,EMAILTEMPLEID,DURATION_NODE,NOTICENUM)
   			values(#[id],#[node_id],#[candidate_groups_id],#[candidate_groups_name],
			#[candidate_users_id],#[candidate_users_name],#[business_id],#[business_type],#[create_date],
			#[create_person_id],#[create_person_name],#[is_valid],#[is_edit_candidate],#[candidate_orgs_id],
			#[candidate_orgs_name],#[candidate_jobs_id],#[candidate_jobs_name],#[candidate_roles_id],
			#[candidate_roles_name],#[messagetempleid],#[emailtempleid],#[duration_node],#[noticenum])
		]]>
	</property>
	
	<property name="queryActivitiNodeCandidate">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name,t.is_valid,t.is_edit_candidate
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
			#if($business_type && !$business_type.equals(""))
				and t.business_type = #[business_type]
			#end
			 where 1=1
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	
	<property name="queryProcessNodesCandidates">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,
			t.candidate_users_name,t.is_valid,t.is_edit_candidate,  t.messagetempleid,a.templetitle messagetempletitle,
       		t.emailtempleid,b.templetitle emailtempletitle,T.DURATION_NODE/1000/60/60 as DURATION_NODE,T.NOTICENUM
       		
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
			
			and t.business_type = #[business_type]
			
			#if($bussinessid && !$bussinessid.equals(""))
				and t.business_id = #[bussinessid]
			#end
			
			left join TD_WF_MESSTEMPLATE a on a.templeid = t.messagetempleid
  			left join TD_WF_MESSTEMPLATE b on b.templeid = t.emailtempleid
			
			 where n.process_key = #[process_key] and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	<property name="queryAllActivitiNodes">
		<![CDATA[
			select n.* from td_wf_activiti_node_info n
			 where n.process_key = ?
			order by n.order_num
		]]>
	</property>
	
	<property name="queryProcessNodeCandidates">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name,t.is_valid,t.is_edit_candidate
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 				
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
				and t.business_type = #[business_type]
			 where n.process_key = #[process_key]
			 and n.node_key=#[node_key] and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	<property name="queryActivitiNodeWithCommonCandidate">
		<![CDATA[
			select n.*,t.node_id,t.candidate_groups_id,t.candidate_groups_name,t.candidate_users_id,t.candidate_users_name,t.is_valid,t.is_edit_candidate
			from td_wf_activiti_node_info n 
			left join td_wf_activiti_node_candidate t on t.node_id=n.id 
				#if($business_id && !$business_id.equals(""))
					and t.business_id = #[business_id] 
				#end
				#if($business_type && !$business_type.equals(""))
					and t.business_type = #[business_type]
				#end
			  where 1=1
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			and n.node_type = 'userTask'
			order by n.order_num
		]]>
	</property>
	
	<property name="queryActivitiNodeInfo">
		<![CDATA[
			select n.*
			from td_wf_activiti_node_info n 
			where n.process_key = #[process_key]
			order by n.order_num
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidateByNodeId">
		<![CDATA[
			delete from  td_wf_activiti_node_candidate where node_id=#[node_id] 
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end
			and business_type=#[business_type]
		]]>
	</property>
	
	<property name="deleteActivitiNodeCandidate">
		<![CDATA[
			delete from  td_wf_activiti_node_candidate where 1=1  
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end
			and business_type=#[business_type]
			and NODE_ID in (select NODE_ID from td_wf_activiti_node_info where PROCESS_KEY=#[process_key])
		]]>
	</property>
	
	<property name="addNodevariable">
		<![CDATA[
			insert into td_wf_nodevariable (id,business_id,business_type,node_id,param_name,param_value,param_type,param_des,is_edit_param,rowno_) 
			values(#[id],#[business_id],#[business_type],#[node_id],#[param_name],#[param_value],#[param_type],#[param_des],#[is_edit_param],#[rowno_])
		]]>
	</property>
	
	<property name="addNodevariableresource">
		<![CDATA[
			insert into td_wf_nodevariableresource
            (id, node_id, param_name, param_value, param_des, is_edit_param)
            values
            (#[id], #[node_id], #[param_name], #[param_value], #[param_des], #[is_edit_param])
		]]>
	</property>
	
	<property name="deleteNodevariableresource">
		<![CDATA[
			delete from td_wf_nodevariableresource where node_id in (select id from td_wf_activiti_node_info where process_key=#[process_key])
		]]>
	</property>
	
	<property name="selectNodevariableresource">
		<![CDATA[
			select t.*,n.node_key,n.node_name from  td_wf_nodevariableresource t
			inner join td_wf_activiti_node_info n on t.node_id=n.id where 1=1
			and process_key=#[process_key]
		]]>
	</property>
	
	<property name="selectNodevariableresourceById">
		<![CDATA[
			select * from  td_wf_nodevariableresource t
			where t.id=?
		]]>
	</property>
	
	<property name="updateNodeVariable">
		<![CDATA[
			update td_wf_nodevariable set param_value=#[param_value],param_des=#[param_des] where id=#[id]
		]]>
	</property>
	
	<property name="updateNodeVariableByNodeId">
		<![CDATA[
			update td_wf_nodevariable set param_value=#[param_value],param_des=#[param_des] where node_id=#[node_id] and param_name=#[param_name]
		]]>
	</property>
	
	<property name="deleteNodeVariable">
		<![CDATA[
			delete from td_wf_nodevariable where id=#[id]
		]]>
	</property>
	
	<property name="batchDeleteNodeVariable">
		<![CDATA[
			delete from td_wf_nodevariable
			where node_id in (select id from td_wf_activiti_node_info where process_key=#[process_key])
			#if($business_type && !$business_type.equals("0"))
				and business_id=#[business_id] 
			#end			
			and business_type=#[business_type]
		]]>
	</property>
	
	
	<property name="queryNodevariableByParamName">
		<![CDATA[
			select * from  td_wf_nodevariable t
			where t.param_name=#[param_name] and node_id=#[node_id]
		]]>
	</property>
	
	<property name="queryNodevariable">
		<![CDATA[
			select t.*,n.node_key,n.node_name from  td_wf_nodevariable t
			inner join td_wf_activiti_node_info n on t.node_id=n.id where 1=1
			#if($node_key && !$node_key.equals(""))
				and n.node_key = #[node_key]
			#end
			#if($process_key && !$process_key.equals(""))
				and n.process_key = #[process_key]
			#end
			#if($business_id && !$business_id.equals(""))
				and t.business_id = #[business_id]
			#end
			#if($business_type && !$business_type.equals(""))
				and t.business_type = #[business_type]
			#end
			order by n.order_num,  t.rowno_
		]]>
	</property>
	
	<property name="selectNodevariableById">
		<![CDATA[
			select t.*,n.node_name from  td_wf_nodevariable t inner join td_wf_activiti_node_info n on t.node_id=n.id  where t.id=?
		]]>
	</property>
	
	<property name="queryGroup">
		<![CDATA[
			select t.*,u.user_realname as owner_name from td_sm_group t inner join td_sm_user u on t.owner_id = u.user_id 
			where 1=1
			#if($group_name && !$group_name.equals(""))
				and t.group_name like #[group_name]
			#end
			#if($group_desc && !$group_desc.equals(""))
				and t.group_desc like #[group_desc]
			#end
			#if($user_name && !$user_name.equals(""))
				and u.user_name like #[user_name]
			#end
		]]>
	</property>
	
	<property name="insertProBusinessType">
		<![CDATA[
			insert into td_wf_pro_businesstype (id,process_key,businesstype_id) values(#[id],#[process_key],#[businessType_id])
		]]>
	</property>
	
	<property name="updateProBusinessType">
		<![CDATA[
			update td_wf_pro_businesstype set businesstype_id=#[businessType_id] where process_key=#[process_key]
		]]>
	</property>
	
	<property name="queryProBusinessTypeByProKey">
		<![CDATA[
			select id from td_wf_pro_businesstype where process_key=#[process_key]
		]]>
	</property>
	
	<property name="deleteProBusinessByKey">
		<![CDATA[
			delete from td_wf_pro_businesstype where process_key=#[process_key]
		]]>
	</property>
	
	
	<property name="queryBusinessNameByProKey">
		<![CDATA[
			select business_name from td_wf_businesstype where business_id = (select businesstype_id from td_wf_pro_businesstype where process_key=?)
		]]>
	</property>
	
	
	<property name="insertAppProcdefRelation">
		<![CDATA[
			insert into td_wf_app_proc_relation 
				(ID, WF_APP_ID, PROCDEF_ID) 
			values
				(#[id], #[wf_app_id], #[procdef_id])
		]]>
	</property>
	
	<property name="deleteAppProcdefRelation">
		<![CDATA[
			delete from td_wf_app_proc_relation  
			where 1=1
				#if($id && !$id.equals(""))
					and id = #[id] 
				#end
				#if($wf_app_id && !$wf_app_id.equals(""))
					and wf_app_id = #[wf_app_id] 
				#end
				#if($procdef_id && !$procdef_id.equals(""))
					and procdef_id = #[procdef_id] 
				#end
		]]>
	</property>	
	
	<property name="selectAppProcdefRelation">
		<![CDATA[
			select * from td_wf_app_proc_relation  
			where 1=1
				#if($id && !$id.equals(""))
					and id = #[id] 
				#end
				#if($wf_app_id && !$wf_app_id.equals(""))
					and wf_app_id = #[wf_app_id] 
				#end
				#if($procdef_id && !$procdef_id.equals(""))
					and procdef_id = #[procdef_id] 
				#end
		]]>
	</property>
	<property name="updateAppProcdefRelation">
		<![CDATA[
			update td_wf_app_proc_relation  
			       set id = #[id],wf_app_id=#[wf_app_id],procdef_id=#[procdef_id]
			       where id=#[id]
		]]>
	</property>
	
	<!-- 根据流程实例ID获取实例参数变量值 gw_tanx -->
	<property name="getVariableListById_wf">
		<![CDATA[
			 SELECT B.ID_,
		        B.REV_,
		        B.TYPE_,
		        B.NAME_,
		        B.EXECUTION_ID_,
		        B.PROC_INST_ID_,
		        B.TASK_ID_,
		        B.BYTEARRAY_ID_,
		        B.DOUBLE_,
		        B.LONG_,
		        B.TEXT_,
		        B.TEXT2_
		   FROM ACT_RU_VARIABLE B
		  WHERE B.PROC_INST_ID_ = ?
		  ORDER BY B.NAME_
		]]>
	</property>
	
	<!-- 获取当前节点信息 gw_tanx -->
	<property name="getCurrentNodeInfoById_wf">
		<![CDATA[
			  SELECT DISTINCT A.PROC_INST_ID_, A.TASK_DEF_KEY_,A.NAME_
			   FROM ACT_RU_TASK A
			  WHERE A.PROC_INST_ID_ = ?
		]]>
	</property>
	
	<!-- 获取流程实例所有参数信息 gw_tanx -->
	<property name="getInstVariableInfoById_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.PROC_INST_ID_ =  ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程运行实例参数信息 gw_tanx -->
	<property name="getRunInstVariableInfoById_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.execution_id_ =  ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程实例参数信息 gw_tanx -->
	<property name="getInstVariableInfoByIdAndName_wf">
		<![CDATA[
			  SELECT T.ID_,
			       T.PROC_INST_ID_,
			       T.EXECUTION_ID_,
			       T.TASK_ID_,
			       T.NAME_,
			       T.VAR_TYPE_ AS TYPE_,
			       T.REV_,
			       T.BYTEARRAY_ID_,
			       T.DOUBLE_,
			       T.LONG_,
			       T.TEXT_,
			       T.TEXT2_
			  FROM ACT_HI_VARINST T
			 WHERE T.execution_id_ =  ?
			 and t.name_= ?
			 ORDER BY T.NAME_
		]]>
	</property>
	
	<!-- 获取流程版本集合 gw_tanx -->
	<property name="getProcessVersionList_wf">
		<![CDATA[
			  SELECT DISTINCT T.VERSION_ FROM ACT_RE_PROCDEF T 
				WHERE 1=1
				#if($processKey && !$processKey.equals(""))
					AND T.KEY_= #[processKey]
				#end 
				ORDER BY T.VERSION_
		]]>
	</property>
	
	<!-- 获取节点参数信息 gw_tanx -->
	<property name="queryNodeVariable_wf">
		<![CDATA[
			  SELECT T.BUSINESS_ID,
				       T.PARAM_NAME,
				       T.PARAM_DES,
				       T.PARAM_VALUE,
				       T.PARAM_TYPE,
				       T.IS_EDIT_PARAM,
				       T.NODE_ID,
				       N.*
				  FROM TD_WF_ACTIVITI_NODE_INFO N
			  
				 RIGHT JOIN TD_WF_NODEVARIABLE T ON T.NODE_ID = N.ID
				       AND T.BUSINESS_TYPE = #[business_type]
				                                
				 WHERE N.PROCESS_KEY = #[process_key]
				 
					#if($bussinessid && !$bussinessid.equals(""))
						and t.business_id = #[bussinessid]
					#end
			
				 ORDER BY N.ORDER_NUM
		]]>
	</property>
	
	<!-- 添加流程消息提示方式记录  gw_tanx -->
	<property name="insertProTemplate_wf">
		<![CDATA[
			insert into TD_WF_PROC_MESSTEMPLATE (NOTICEID,PROCESS_KEY,MESSAGETEMPLEID,EMAILTEMPLEID) values(?,?,?,?)
		]]>
	</property>
	
	<!-- 添加流程定义计算工时是否包含节假日  gw_tanx -->
	<property name="insertProIsContainHoliday_wf">
		<![CDATA[
			insert into TD_WF_PROC_MESSTEMPLATE (NOTICEID,PROCESS_KEY,IS_CONTAIN_HOLIDAY) values(?,?,?)
		]]>
	</property>
	
	<!-- 修改流程定义计算工时是否包含节假日  gw_tanx -->
	<property name="updateProIsContainHoliday_wf">
		<![CDATA[
			update TD_WF_PROC_MESSTEMPLATE set IS_CONTAIN_HOLIDAY = ? where NOTICEID = ?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="updateProTemplate_wf">
		<![CDATA[
			update TD_WF_PROC_MESSTEMPLATE set MESSAGETEMPLEID = ?,EMAILTEMPLEID= ? where NOTICEID = ?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="queryNoticeIdByProKey">
		<![CDATA[
			select NOTICEID from TD_WF_PROC_MESSTEMPLATE where process_key=?
		]]>
	</property>
	
	<!-- 修改流程消息提示方式记录  gw_tanx -->
	<property name="getMessTamplateById_wf">
		<![CDATA[
			SELECT A.PROCESS_KEY,
			       A.NOTICEID,
			       A.MESSAGETEMPLEID,
			       B.TEMPLETITLE AS MESSAGETEMPLETITLE,
			       A.EMAILTEMPLEID,
			       C.TEMPLETITLE AS EMAILTEMPLETITLE
			  FROM TD_WF_PROC_MESSTEMPLATE A
			  LEFT JOIN TD_WF_MESSTEMPLATE B ON A.MESSAGETEMPLEID = B.TEMPLEID
			  LEFT JOIN TD_WF_MESSTEMPLATE C ON A.EMAILTEMPLEID = C.TEMPLEID
			  where 1=1
			  and PROCESS_KEY=?
		]]>
	</property>
	
	<!-- 添加节点处理工时与提醒次数  gw_tanx -->
	<property name="insertNodeWorktime_wf">
		<![CDATA[
			INSERT INTO TD_WF_NODE_WORKTIME
			  (PROCESS_KEY, PROCESS_ID, NODE_KEY, DURATION_NODE, NOTICENUM)
			VALUES
			  (#[PROCESS_KEY],#[PROCESS_ID],#[NODE_KEY],#[DURATION_NODE],#[NOTICENUM])
		]]>
	</property>
	
</properties>