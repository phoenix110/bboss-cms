<project name="cms_baseline" default="default" basedir=".">
	<description>
		cms_baseline build file
	</description>
	<tstamp prefix="start" />

	<tstamp>
		<format property="compile.timestamp" pattern="yyyy-MM-dd HH.mm.ss" />
	</tstamp>


	<typedef resource="net/sf/antcontrib/antlib.xml" classpath="ant-contrib-1.0b3.jar" />
	
	<!-- set global properties for this build -->
	<property file="build.properties" />
	<target name="init" description="create timestamp and directories">
		<echo>Init...</echo>

		<tstamp />
		<delete dir="classes-all" />	
		<delete dir="classes-mq" />	
		<delete dir="${distrib}" />
		<mkdir dir="classes-all" />
		<mkdir dir="classes-sany" />
		<mkdir dir="classes-mq" />
		<delete dir="classes-sonar" />
		<mkdir dir="classes-sonar" />
		<mkdir dir="${distrib}" />

	</target>
	<target name="default" depends="complete" description="default = build distribution package" />

	<!--
		       ==========================
		        Distribution jar package
		       ==========================
	-->
	<target name="distrib" depends="init,jar-parameters-handler,jar-sany-wx,jar-sany-mail,jar-cms,jar-system,jar-sany-datasource,jar-sany-mbp,jar-sources,jar-sany-masterdata,jar-sany-workflow,jar-sany-workflow-bussiness,jar-sany-workflow-demo,jar-sany-ldap,jar-sany-demo,jar-sany-appbom,jar-sany-log,jar-sany-sap,jar-sany-sms,copy-resource,copy-depends-liberary" description="copy jar file to distribution directory">
		<echo>Construct the distribution package...</echo>
		
	</target>
	<target name="jar-sources" depends="jar-workflow-sources" description="jar sources">
				<echo>Generate the bboss-cms  library sources.jar ...</echo>
				<jar jarfile="distrib/system-sources.jar" >
					<manifest>				
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
					<fileset dir="src-sys" includes="**/*.java"/>
					<fileset dir="src-cms" includes="**/*.java"/>
					<fileset dir="src-common" includes="**/*.java"/>
					<fileset dir="src-dictionary" includes="**/*.java"/>
					
					<fileset dir="src-sap" includes="**/*.java"/>
					<fileset dir="src-ldap" includes="**/*.java"/>
					<fileset dir="src-sanydesktop" includes="**/*.java"/>
					<fileset dir="src-mail" includes="**/*.java"/>
					<fileset dir="src-masterdata" includes="**/*.java"/>
						<fileset dir="src-parameters-handler" includes="**/*.java"/>
					<fileset dir="src-sanylog" includes="**/*.java"/>
					<fileset dir="src-sms" includes="**/*.java"/>
						<fileset dir="src-application" includes="**/*.java"/>
					<fileset dir="src-appbom" includes="**/*.java"/>
					<fileset dir="src-datasource" includes="**/*.java"/>
					
				</jar>
			</target>
	<target name="jar-workflow-sources" description="jar workflow sources">
					<echo>Generate the bboss-cms  library workflow-sources.jar ...</echo>
					<jar jarfile="distrib/workflow-sources.jar" >
						<manifest>				
							<attribute name="Implementation-Version" value="${impl.version}" />
							<attribute name="Specification-Version" value="${revision}" />
							<attribute name="Implementation-Vendor" value="${impl.vendor}" />
							<attribute name="Implementation-ProductID" value="${impl.productID}" />
							<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
							<attribute name="Compile-User" value="${username}" />
						</manifest>
						
						<fileset dir="src-workflow" includes="**/*.java"/>
						<fileset dir="src_workflow-business" includes="**/*.java"/>						
						<fileset dir="src-workflow-web" includes="**/*.java"/>
						<fileset dir="src-workflow-demo" includes="**/*.java"/>
						
						
					</jar>
				</target>
	<target name="distrib-jars" depends="init,jar-parameters-handler,jar-sany-wx,jar-cms,jar-system,jar-sany-datasource,jar-sany-mbp,jar-sources,jar-sany-masterdata,jar-sany-workflow,jar-sany-workflow-bussiness,jar-sany-workflow-demo,jar-sany-ldap,jar-sany-demo,jar-sany-appbom,jar-sany-log,jar-sany-sap,jar-sany-sms" description="copy jar file to distribution directory">
			<echo>Construct the distribution package...</echo>
		<antcall target="cleartempfiles"></antcall>
	</target>
	<!--<target name="distrib-cim" depends="init,jar-system,copy-resource,copy-depends-liberary,copy-cim-resource" description="copy jar file to distribution directory">
		<echo>Construct the distribution package...</echo>
		
	</target>-->
	

	<target name="compile-all" description="compile the compile-all source ">
		<echo>compile the compile-all source ...</echo>
		<javac encoding="UTF-8" destdir="classes-all" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
			 
			<src path="${source}/src-dictionary" />
			<src path="${source}/src-sys" />
			<!--<src path="${source}/src-communication" />-->
			<src path="${source}/src-common" />
			<!--
			<src path="${source}/test" />
			-->
			<classpath id="cp-cms_baseline">

				<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
				
				<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
				<fileset dir="${distrib}" includes="*.jar *.zip" />
			</classpath>
		</javac>
		<copy todir="classes-all">
			<fileset dir="${source}/src-common" includes="**/*.xml"/>
		 
			<!--<fileset dir="${source}/src-sys" includes="com/frameworkset/platform/sysmgrcore/manager/db/job.xml"/>-->
			<fileset dir="${source}/src-sys" includes="**/*.xml"/>
			<fileset dir="${source}/src-dictionary" includes="**/*.xml"/>
		</copy>
		<copy todir="classes-sonar">
			<fileset dir="classes-all" includes="**/*.*"/>
		</copy>
		
		
	</target>
	
	<target name="compile-cms" depends="jar-system" description="compile the compile-cms source ">
			<echo>compile the compile-cms source ...</echo>
		<mkdir dir="classes-all"/>	
		<javac encoding="UTF-8" destdir="classes-all" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-cms" />
				
				<!--
				<src path="${source}/test" />
				-->
				<classpath id="cp-cms_baseline">

					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
				</classpath>
			</javac>
			<copy todir="classes-all">
				 <fileset dir="${source}/src-cms" includes="**/*.xml"/>
				<fileset dir="${source}/src-cms" includes="**/*.xlsx"/>
				 
			</copy>
			 
			
		</target>
	
	<target name="compile-sany-desktop" depends="jar-sany-application,jar-system" description="compile the sany source ">
			<echo>compile the compile-all source ...</echo>
			<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-sanydesktop" />				
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
					
				</classpath>
			</javac>
		<copy todir="classes-sany">
			<fileset dir="${source}/src-sanydesktop" includes="**/*.xml"/>
		</copy>
		<copy todir="classes-sonar">
			<fileset dir="classes-sany" includes="**/*.*"/>
		</copy>
	</target>
	
	<target name="jar-sany-desktop" depends="compile-sany-desktop" description="generate the sany-desktop-lib library sany-desktop.jar">
			<echo>Generate the jar-sany-desktop library sany-desktop.jar ...</echo>
			<jar jarfile="${distrib}/sany-desktop.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		 <mkdir dir="classes-sany"/>	
		
	</target>
	
	<target name="compile-sany-datasource" depends="jar-system" description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
		<delete dir="classes-ds"/>
					 <mkdir dir="classes-ds"/>	
				<javac encoding="UTF-8" destdir="classes-ds" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-datasource" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-ds">
				<fileset dir="${source}/src-datasource" includes="**/*.xml"/>
			</copy>
			<copy todir="classes-sonar">
				<fileset dir="classes-ds" includes="**/*.*"/>
			</copy>
		</target>
		
		<target name="jar-sany-datasource" depends="compile-sany-datasource" description="generate the sany-desktop-lib library datasource.jar">
				<echo>Generate the datasource library datasource.jar ...</echo>
				<jar jarfile="${distrib}/datasource.jar" basedir="classes-ds" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-ds"/>
			 
			
		</target>
	
	
	<target name="compile-sany-wx" description="compile-sany-wx source ">
					<echo>compile the compile-sany-wx source ...</echo>
			<delete dir="classes-ds"/>
			<mkdir dir="classes-ds"/>	
			<javac encoding="UTF-8" destdir="classes-ds" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-wx" />				
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
					
				</classpath>
			</javac>
		<copy todir="classes-ds">
			<fileset dir="${source}/src-wx" includes="**/*.xml"/>
		</copy>
		<copy todir="classes-sonar">
			<fileset dir="classes-ds" includes="**/*.*"/>
		</copy>
	</target>
	
	<target name="jar-sany-wx" depends="compile-sany-wx" description="generate the sany-wx.jar">
			<echo>Generate the sany-wx.jar ...</echo>
			<jar jarfile="${distrib}/sany-wx.jar" basedir="classes-ds" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-ds"/>
		 
		
	</target>
	
	
	<target name="compile-sany-mbp" depends="jar-system" description="compile the sany source ">
					<echo>compile the compile-all source ...</echo>
			<delete dir="classes-mbp"/>
						 <mkdir dir="classes-mbp"/>	
					<javac encoding="UTF-8" destdir="classes-mbp" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
						<src path="${source}/src-sanymbp" />				
						<classpath id="cp-cms_baseline">
							<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
							 
							<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
							<fileset dir="${distrib}" includes="*.jar *.zip" />
							
						</classpath>
					</javac>
				<copy todir="classes-mbp">
					<fileset dir="${source}/src-sanymbp" includes="**/*.xml"/>
				</copy>
				<copy todir="classes-sonar">
					<fileset dir="classes-mbp" includes="**/*.*"/>
				</copy>
			</target>
			
			<target name="jar-sany-mbp" depends="compile-sany-mbp" description="generate the sany-mbp-lib library sany-mbp.jar">
					<echo>Generate the datasource library datasource.jar ...</echo>
					<jar jarfile="${distrib}/sany-mbp.jar" basedir="classes-mbp" includes="**/*">
						<manifest>
							<attribute name="Implementation-Version" value="${impl.version}" />
							<attribute name="Specification-Version" value="${revision}" />
							<attribute name="Implementation-Vendor" value="${impl.vendor}" />
							<attribute name="Implementation-ProductID" value="${impl.productID}" />
							<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
							<attribute name="Compile-User" value="${username}" />
						</manifest>
					</jar>
				 <delete dir="classes-mbp"/>
				 
				
			</target>
	
	<target name="compile-sany-log" depends="jar-system" description="compile the sany source ">
			<mkdir dir="classes-sany"/>	
			<echo>compile the compile-all source ...</echo>
			<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-sanylog" />				
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
					
				</classpath>
			</javac>
		<copy todir="classes-sany">
			<fileset dir="${source}/src-sanylog" includes="**/*.xml"/>
		</copy>
		<copy todir="classes-sonar">
			<fileset dir="classes-sany" includes="**/*.*"/>
		</copy>
	</target>
	
	<target name="jar-sany-log" depends="compile-sany-log" description="generate the sany-log-lib library sany-log.jar">
			<echo>Generate the jar-sany-log library sany-log.jar ...</echo>
			<jar jarfile="${distrib}/sany-log.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		 <mkdir dir="classes-sany"/>	
		
	</target>
	
	<target name="compile-sany-sap"  description="compile the sany source ">
				<mkdir dir="classes-sany"/>	
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-sap" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-sap" includes="**/*.xml"/>
			</copy>
			<copy todir="classes-sonar">
				<fileset dir="classes-sany" includes="**/*.*"/>
			</copy>
		</target>
		
		<target name="jar-sany-sap" depends="compile-sany-sap" description="generate the sany-sap-lib library sany-sap.jar">
				<echo>Generate the jar-sany-sap library sany-sap.jar ...</echo>
				<jar jarfile="${distrib}/sany-sap.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
		</target>
	
	<target name="compile-sany-sms"  description="compile the sany source ">
				<mkdir dir="classes-sany"/>	
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-sms" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-sms" includes="**/*.xml"/>
			</copy>
			<copy todir="classes-sonar">
				<fileset dir="classes-sany" includes="**/*.*"/>
			</copy>
		</target>
		
		<target name="jar-sany-sms" depends="compile-sany-sms,jar-sany-sms-source" description="generate the sany-sms-lib library sany-sms.jar">
				<echo>Generate the jar-sany-sms library sany-sms.jar ...</echo>
				<jar jarfile="${distrib}/sany-sms.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
		</target>
		
			
		<target name="jar-sany-sms-source"  description="generate the sany-sms-lib library sany-sms.jar">
				<echo>Generate the jar-sany-sms library sany-sms-source.jar ...</echo>
				<jar jarfile="${distrib}/sany-sms-source.jar" >
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
						<fileset dir="src-sms" includes="**/*.java"/>
				</jar>
			 
			
		</target>
	<target name="compile-parameters-handler"  description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-parameters-handler" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
				<copy todir="classes-sonar">
					<fileset dir="classes-sany" includes="**/*.*"/>
				</copy>
			
	</target>
		
	<target name="jar-parameters-handler" depends="compile-parameters-handler" description="generate the sany-desktop-lib library parameters-handler.jar">
			<echo>Generate the library parameters-handler.jar ...</echo>
			<jar jarfile="${distrib}/parameters-handler.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		 <mkdir dir="classes-sany"/>	
		
	</target>
	
	
	<target name="compile-sany-ldap" depends="jar-system" description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-ldap" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-ldap" includes="**/*.xml"/>
			</copy>
			<copy todir="classes-sonar">
				<fileset dir="classes-sany" includes="**/*.*"/>
			</copy>
		
	</target>
	
	<target name="jar-sany-ldap" depends="compile-sany-ldap" description="generate the sany-ldap-lib library sany-ldap.jar">
				<echo>Generate the jar-sany-desktop library sany-ldap.jar ...</echo>
				<jar jarfile="${distrib}/sany-ldap.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
	</target>
	
	
	<target name="compile-sany-demo" depends="jar-system" description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-demo" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-demo" includes="**/*.xml"/>
			</copy>
			<copy todir="classes-sonar">
				<fileset dir="classes-sany" includes="**/*.*"/>
			</copy>
		
	</target>
	
	<target name="jar-sany-demo" depends="compile-sany-demo" description="generate the sany-demo-lib library sany-demo.jar">
				<echo>Generate the jar-sany-demo library sany-demo.jar ...</echo>
				<jar jarfile="${distrib}/sany-demo.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
	</target>
	
	
	

		
		
		<target name="compile-sany-mail" depends="jar-system" description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-mail" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-mail" includes="**/*.xml"/>
			</copy>
		<copy todir="classes-sonar">
			<fileset dir="classes-sany" includes="**/*.*"/>
		</copy>	
	</target>
	
	<target name="jar-sany-mail" depends="compile-sany-mail" description="generate the sany-mail-lib library sany-mail.jar">
				<echo>Generate the jar-sany-mail library sany-mail.jar ...</echo>
				<jar jarfile="${distrib}/sany-mail.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
	</target>
	
	
	
	<target name="compile-sany-masterdata" depends="jar-system" description="compile the sany source ">
				<echo>compile the compile-all source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-masterdata" />				
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
						
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-masterdata" includes="**/*.xml"/>
			</copy>
		
	</target>
	
	<target name="jar-sany-masterdata" depends="compile-sany-masterdata" description="generate the sany-mail-lib library sany-masterdata.jar">
				<echo>Generate the jar-sany-masterdata library sany-masterdata.jar ...</echo>
				<jar jarfile="${distrib}/sany-masterdata.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			 <mkdir dir="classes-sany"/>	
			
	</target>
	<target name="compile-sany-workflow" depends="jar-sany-workflow-web" description="compile the sany appbom source ">
			<echo>compile the appbom source ...</echo>
			<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-workflow" />				
						
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
				</classpath>
			</javac>
		<copy todir="classes-sany">
			<fileset dir="${source}/src-workflow" includes="**/*.xml"/>
			
		</copy>
	</target>
	
	<target name="jar-sany-workflow" depends="compile-sany-workflow" description="generate the sany-workflow-lib library sany-workflow.jar">
			<echo>Generate the sany-workflow library sany-workflow.jar ...</echo>
			<jar jarfile="${distrib}/sany-workflow.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		  <mkdir dir="classes-sany"/>	
		
	</target>
	
	<target name="compile-sany-workflow-web" depends="jar-sany-application" description="compile the sany appbom source ">
				<echo>compile the appbom source ...</echo>
				<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
					<src path="${source}/src-workflow-web" />				
									
					<classpath id="cp-cms_baseline">
						<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
						 
						<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
						<fileset dir="${distrib}" includes="*.jar *.zip" />
					</classpath>
				</javac>
			<copy todir="classes-sany">
				<fileset dir="${source}/src-workflow-web" includes="**/*.xml"/>
				
			</copy>
		</target>
		
		<target name="jar-sany-workflow-web" depends="compile-sany-workflow-web" description="generate the sany-workflow-web-lib library sany-workflow-web.jar">
				<echo>Generate the sany-workflow library sany-workflow.jar ...</echo>
				<jar jarfile="${distrib}/sany-workflow-web.jar" basedir="classes-sany" includes="**/*">
					<manifest>
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
			 <delete dir="classes-sany"/>
			  <mkdir dir="classes-sany"/>	
			
		</target>
	
	
	
	<target name="compile-sany-workflow-bussiness" depends="jar-sany-workflow" description="compile the sany appbom source ">
					<echo>compile the appbom source ...</echo>
					<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
						<src path="${source}/src_workflow-business" />				
										
						<classpath id="cp-cms_baseline">
							<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
							 
							<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
							<fileset dir="${distrib}" includes="*.jar *.zip" />
						</classpath>
					</javac>
				<copy todir="classes-sany">
					<fileset dir="${source}/src_workflow-business" includes="**/*.xml"/>
					
				</copy>
			</target>
			
			<target name="jar-sany-workflow-bussiness" depends="compile-sany-workflow-bussiness" description="generate the sany-workflow-web-lib library sany-workflow-web.jar">
					<echo>Generate the sany-workflow library sany-workflow.jar ...</echo>
					<jar jarfile="${distrib}/sany-workflow-bussiness.jar" basedir="classes-sany" includes="**/*">
						<manifest>
							<attribute name="Implementation-Version" value="${impl.version}" />
							<attribute name="Specification-Version" value="${revision}" />
							<attribute name="Implementation-Vendor" value="${impl.vendor}" />
							<attribute name="Implementation-ProductID" value="${impl.productID}" />
							<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
							<attribute name="Compile-User" value="${username}" />
						</manifest>
					</jar>
				 <delete dir="classes-sany"/>
				  <mkdir dir="classes-sany"/>	
				
			</target>
	
	
	<target name="compile-sany-workflow-demo" depends="jar-sany-workflow-bussiness" description="compile the sany appbom source ">
						<echo>compile the appbom source ...</echo>
						<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
							<src path="${source}/src-workflow-demo" />				
											
							<classpath id="cp-cms_baseline">
								<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
								 
								<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
								<fileset dir="${distrib}" includes="*.jar *.zip" />
							</classpath>
						</javac>
					<copy todir="classes-sany">
						<fileset dir="${source}/src-workflow-demo" includes="**/*.xml"/>
						
					</copy>
				</target>
				
				<target name="jar-sany-workflow-demo" depends="compile-sany-workflow-demo" description="generate the sany-workflow-web-lib library sany-workflow-web.jar">
						<echo>Generate the sany-workflow library sany-workflow.jar ...</echo>
						<jar jarfile="${distrib}/sany-workflow-demo.jar" basedir="classes-sany" includes="**/*">
							<manifest>
								<attribute name="Implementation-Version" value="${impl.version}" />
								<attribute name="Specification-Version" value="${revision}" />
								<attribute name="Implementation-Vendor" value="${impl.vendor}" />
								<attribute name="Implementation-ProductID" value="${impl.productID}" />
								<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
								<attribute name="Compile-User" value="${username}" />
							</manifest>
						</jar>
					 <delete dir="classes-sany"/>
					  <mkdir dir="classes-sany"/>	
					
				</target>
	
	<target name="compile-sany-application" depends="jar-sany-ldap,jar-sany-mail" description="compile the sany application source ">
			<echo>compile the application source ...</echo>
			<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-application" />				
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
				 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
				</classpath>
			</javac>
		<copy todir="classes-sany">
			<fileset dir="${source}/src-application" includes="**/*.xml"/>
		</copy>
	</target>
	
	<target name="jar-sany-application" depends="compile-sany-application" description="generate the sany-application library sany-application.jar">
			<echo>Generate the sany-application library sany-application.jar ...</echo>
			<jar jarfile="${distrib}/sany-application.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		  <mkdir dir="classes-sany"/>	
		
	</target>
	<target name="compile-sany-appbom" depends="jar-sany-desktop" description="compile the sany appbom source ">
			<echo>compile the appbom source ...</echo>
			<javac encoding="UTF-8" destdir="classes-sany" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-appbom" />				
				<classpath id="cp-cms_baseline">
					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					<fileset dir="${distrib}" includes="*.jar *.zip" />
				</classpath>
			</javac>
		<copy todir="classes-sany">
			<fileset dir="${source}/src-appbom" includes="**/*.xml **/*.xlsx **/*.xls"/>
		</copy>
	</target>
	
	<target name="jar-sany-appbom" depends="compile-sany-appbom" description="generate the sany-desktop-lib library sany-appbom.jar">
			<echo>Generate the jar-appbom library appbom.jar ...</echo>
			<jar jarfile="${distrib}/sany-appbom.jar" basedir="classes-sany" includes="**/*">
				<manifest>
					<attribute name="Implementation-Version" value="${impl.version}" />
					<attribute name="Specification-Version" value="${revision}" />
					<attribute name="Implementation-Vendor" value="${impl.vendor}" />
					<attribute name="Implementation-ProductID" value="${impl.productID}" />
					<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
					<attribute name="Compile-User" value="${username}" />
				</manifest>
			</jar>
		 <delete dir="classes-sany"/>
		 
		
	</target>
	<target name="jar-system" depends="compile-all" description="generate the system-lib library system.jar">
		<echo>Generate the jar-system library system.jar ...</echo>
		<jar jarfile="${distrib}/system.jar" basedir="classes-all" includes="**/*">
			<manifest>
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Specification-Version" value="${revision}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
				<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
				<attribute name="Compile-User" value="${username}" />
			</manifest>
		</jar>
		<delete dir="classes-all"/>
			
	</target>
	
	<target name="jar-cms" depends="compile-cms" description="generate the cms library cms.jar">
		<echo>Generate the cms library cms.jar ...</echo>
		<jar jarfile="${distrib}/cms.jar" basedir="classes-all" 
			includes="org/**/* com/frameworkset/platform/cms/**/* com/frameworkset/common/tag/**/*"
			excludes="com/frameworkset/platform/cms/votemanager/ws/*">
			<manifest>
				
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Specification-Version" value="${revision}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
				<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
				<attribute name="Compile-User" value="${username}" />
			</manifest>
		</jar>
		
		<jar jarfile="${distrib}/cms-vote.jar" basedir="classes-all" 
					includes="com/frameworkset/platform/cms/votemanager/ws/*">
			<manifest>
				
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Specification-Version" value="${revision}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
				<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
				<attribute name="Compile-User" value="${username}" />
			</manifest>
		</jar>
		
			
		<delete dir="classes-all"/>
	</target>
	<target name="compile-mq" depends="jar-cms" description="compile the compile-all source ">
			<echo>compile the compile-all source ...</echo>
			<javac encoding="UTF-8" destdir="classes-mq" target="1.5" source="1.5" deprecation="true" debug="${debug}" optimize="${optimize}" memorymaximumsize="256M" fork="true" verbose="yes">
				<src path="${source}/src-mq" />
				<classpath id="cp-cms_baseline">

					<fileset dir="${webroot}/WEB-INF/lib" includes="**/*.jar *.zip" />
					 
					<fileset dir="${source}/lib-compile" includes="*.jar *.zip" />
					
				</classpath>
			</javac>
		</target>
	<target name="jar-mqservice" depends="jar-mqtransfer" description="generate the mqservice.jar">
				<echo>Generate the mqservice.jar ...</echo>
				<copy todir="classes-mq/org/frameworkset/mq/">
					<fileset dir="${source}/resources/org/frameworkset/mq" includes="mq-init.xml"/>
				</copy>
				<jar jarfile="${distrib}/mqservice.jar" basedir="classes-mq" 
					 includes="org/frameworkset/mq/mq-init.xml com/frameworkset/platform/mq/broker/**/* com/frameworkset/platform/mq/client/**/* com/frameworkset/platform/mq/rpc/**/* com/frameworkset/platform/mq/MQUtil*.class com/frameworkset/platform/mq/MQServiceException.class com/frameworkset/platform/mq/FileUtil*.class com/frameworkset/platform/mq/CAInfo.class com/frameworkset/platform/mq/TransConfProperties.class">
					<manifest>
						
						<attribute name="Implementation-Version" value="${impl.version}" />
						<attribute name="Specification-Version" value="${revision}" />
						<attribute name="Implementation-Vendor" value="${impl.vendor}" />
						<attribute name="Implementation-ProductID" value="${impl.productID}" />
						<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
						<attribute name="Compile-User" value="${username}" />
					</manifest>
				</jar>
		<delete dir="classes-mq/com/frameworkset/platform/mq/broker"/>
		
		  
	</target>
	
	<target name="jar-mqtransfer" depends="compile-mq" description="generate the bboss-taglib library frameworkset.jar">
		<echo>Generate the mq-transferservice.jar ...</echo>
		<jar jarfile="${distrib}/mq-transferservice.jar" basedir="classes-mq" includes="com/frameworkset/platform/mq/transfer/**/*">
			<manifest>
				
				<attribute name="Implementation-Version" value="${impl.version}" />
				<attribute name="Specification-Version" value="${revision}" />
				<attribute name="Implementation-Vendor" value="${impl.vendor}" />
				<attribute name="Implementation-ProductID" value="${impl.productID}" />
				<attribute name="Compile-Timestamp" value="${compile.timestamp}" />
				<attribute name="Compile-User" value="${username}" />
			</manifest>
		</jar>
		<delete dir="classes-mq/com/frameworkset/platform/mq/transfer"/>
	</target>
		
	

	<target name="copy-resource" description="copy resource files">
		<echo>copy resource files ...</echo>
		<copy todir="${distrib}/WebRoot/">
			<fileset dir="${webroot}/"/>
		</copy>
		<delete dir="${distrib}/WebRoot/WEB-INF/classes"/>
		<delete dir="${distrib}/WebRoot/sitepublish"/>
		<delete dir="${distrib}/WebRoot/sitepulishtemp"/>
		<mkdir dir="${distrib}/WebRoot/WEB-INF/classes"/>
		<copy todir="${distrib}/WebRoot/WEB-INF/classes">
			<fileset dir="${source}/resources" includes="**/*" 
				excludes="org/frameworkset/mq/mq-init.xml"/>
		</copy>		
	</target>	
	<target name="copy-depends-liberary" description="copy depends liberarys">
				<echo>copy depends liberarys ...</echo>
				<copy todir="${distrib}/WebRoot/WEB-INF/lib">
						<fileset dir="${distrib}" includes="*.jar" />
				</copy>
	</target>
	
	<target name="copy-cim-resource" description="copy cim resources">
		<echo>copy cim resources ...</echo>
		<copy todir="${distrib}/WebRoot/" overwrite="true">
				<fileset dir="${cimbaseconsole}/WebRoot" includes="**/*" />
		</copy>
		<copy todir="${distrib}/WebRoot/WEB-INF/classes" overwrite="true">
				<fileset dir="${cimbaseconsole}/resources" includes="**/*" />
		</copy>
		<delete dir="${distrib}/WebRoot/cms"/>
	</target>
	
	<target name="war" depends="distrib" description="copy depends liberarys">
		<war destfile="${distrib}/SanyPDP.war" webxml="${distrib}/WebRoot/WEB-INF/web.xml">
		  <fileset dir="${distrib}/WebRoot/"/>	  
		</war>
		
		<zip destfile="${distrib}/dbinit-system.zip" basedir="dbinit-system"/>
		<delete dir="${distrib}/WebRoot"/>
	</target>
	
	<target name="war-cim" description="copy depends liberarys">
		<war destfile="${distrib}/cimconsole.war" webxml="${distrib}/WebRoot/WEB-INF/web.xml">
		  <fileset dir="${distrib}/WebRoot/"/>	  
		</war>
		<delete dir="classes-all" />
	</target>
	
	<target name="complete" depends="war" description="copy depends liberarys">
		<antcall target="cleartempfiles"></antcall>
	</target>
	
	<target name="cleartempfiles"  description="copy depends liberarys">
			<delete dir="classes-all" />
			<delete dir="classes-mq" />	
			<delete dir="classes-sany" />
			<delete dir="classes-sany-ldap" />	
			
			<delete dir="distrib/WebRoot" />
		</target>
	
	<!-- 压缩 mqserver -->
	<target name="zip-mqserver-ver" depends="default">
		<ant  antfile="${mqserver.script.dir}" inheritrefs="true" target="updateToDefault" >
		
		</ant>
	</target>
	
	<!-- 压缩 mqclient -->
	<target name="zip-mqclient-ver" depends="default">
		<ant  antfile="${mqclient.script.dir}" inheritrefs="true" target="updateToDefault" >
		
		</ant>
	</target>
	<target name="startTomcat">
	   <if>
	   <not>
	    <socket server="${server.ip}" port="${tomcat.port}" /><!--判断tomcat服务器的端口是否能访问，如果不能访问到，则说明未启动，就执行then中的操作-->
	   </not>
	   <then>
	    <echo message="start tomcat in ${server.ip}..." />
	    <sshexec host="${server.ip}" username="${server.username}" password="${server.password}" command="${tomcat.home}/bin/restart.sh" trust="true" /><!--通过ssh远程启动tomcat-->
	    <waitfor maxwait="5" maxwaitunit="minute" checkevery="5" checkeveryunit="second"><!--每5秒钟检查tomcat是否启动-->
	     <and>
	      <socket server="${server.ip}" port="${tomcat.port}" />
	     </and>
	    </waitfor>
	   	<sleep seconds="${sleeptime}"/>
	   </then>
	  </if>
	</target>
	<target name="stopTomcat">
	  <if>
	   <socket server="${server.ip}" port="${tomcat.port}" /><!--检查tomcat的端口，判断tomcat是否还在运行-->
	   <then>
	    <echo message="stop tomcat in ${server.ip}..." />
	    <sshexec failonerror="true" host="${server.ip}" username="${server.username}" password="${server.password}"
	    	command="ps -efww|grep ${tomcat.home}/bin |grep -v grep|cut -c 9-15|xargs kill -9" trust="true" /><!--远程执行关闭tomcat-->
	    <waitfor maxwait="5" maxwaitunit="minute" checkevery="5" checkeveryunit="second">
	     <not>
	      <socket server="${server.ip}" port="${tomcat.port}" />
	     </not>
	    </waitfor>
	   </then>
	  </if>
	</target>
	
	<target name="deploywar" >				
		<antcall target="stopTomcat">
			<param name="server.ip" value="${server.ip}" />
			<param name="tomcat.port" value="${tomcat.port}" />
			<param name="tomcat.home" value="${tomcat.home}" />
			<param name="server.username" value="${server.username}" />
			<param name="server.password" value="${server.password}" />
		</antcall>
		<scp file="${warfile}" todir="${server.username}@${server.ip}:${tomcat.home}/webapps" trust="true" password="${server.password}" />
		<echo>Clear old dirctory ${clearfile} ...</echo>
		<sshexec host="${server.ip}" username="${server.username}" password="${server.password}" command="rm -Rf ${tomcat.home}/webapps/${clearfile}" trust="true" />				
		<antcall target="startTomcat">
			<param name="server.ip" value="${server.ip}" />
			<param name="tomcat.port" value="${tomcat.port}" />
			<param name="tomcat.home" value="${tomcat.home}" />
			<param name="server.username" value="${server.username}" />
			<param name="server.password" value="${server.password}" />			
			<param name="sleeptime" value="${sleeptime}" />
		</antcall>				
	</target>
		
	<target name="uploadtoserver" depends="default">
		<antcall target="deploywar">
			<param name="server.ip" value="10.0.15.138" />
			<param name="tomcat.port" value="8080" />
			<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
			<param name="server.username" value="root" />
			<param name="server.password" value="31p@sSw0rd" />
			<param name="clearfile" value="SanyPDP" />
			<param name="warfile" value="distrib/SanyPDP.war" />
			<param name="sleeptime" value="60" />
		</antcall>
		
		<antcall target="deploywar">
			<param name="server.ip" value="10.0.15.137" />
			<param name="tomcat.port" value="8080" />
			<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
			<param name="server.username" value="root" />
			<param name="server.password" value="31p@sSw0rd" />
			<param name="clearfile" value="SanyPDP" />
			<param name="warfile" value="distrib/SanyPDP.war" />
			<param name="sleeptime" value="60" />
		</antcall>
		
		<antcall target="deploywar">
			<param name="server.ip" value="10.0.15.141" />
			<param name="tomcat.port" value="8080" />
			<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
			<param name="server.username" value="root" />
			<param name="server.password" value="1234qwerASDF" />
			<param name="clearfile" value="SanyPDP" />
			<param name="warfile" value="distrib/SanyPDP.war" />
			<param name="sleeptime" value="60" />
		</antcall>
		<echo>deploy token server ...</echo>
		<move file="distrib/SanyPDP.war" tofile="distrib/SanyToken.war"/>		
		<antcall target="deploywar">
			<param name="server.ip" value="10.0.15.138" />
			<param name="tomcat.port" value="9080" />
			<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
			<param name="server.username" value="root" />
			<param name="server.password" value="31p@sSw0rd" />
			<param name="clearfile" value="SanyToken" />
			<param name="warfile" value="distrib/SanyToken.war" />
			<param name="sleeptime" value="30" />
		</antcall>
		<antcall target="deploywar">
			<param name="server.ip" value="10.0.15.137" />
			<param name="tomcat.port" value="9080" />
			<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
			<param name="server.username" value="root" />
			<param name="server.password" value="31p@sSw0rd" />
			<param name="clearfile" value="SanyToken" />
			<param name="warfile" value="distrib/SanyToken.war" />
			<param name="sleeptime" value="30" />
		</antcall>
		<move file="distrib/SanyToken.war" tofile="distrib/SanyPDP.war"/>
		<echo>deploy token server ok</echo>
		
		
	</target>
	
	<target name="testtomcat" >
				
					<antcall target="stopTomcat">
						<param name="server.ip" value="10.0.15.137" />
						<param name="tomcat.port" value="8080" />
						<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
						<param name="server.username" value="root" />
						<param name="server.password" value="31p@sSw0rd" />
					</antcall>
					<sshexec host="10.0.15.137" username="root" password="31p@sSw0rd" command="rm -Rf /opt/env/apache-tomcat-7.0.54/webapps/SanyPDP" trust="true" />			
					<antcall target="startTomcat">
						<param name="server.ip" value="10.0.15.137" />
						<param name="tomcat.port" value="8080" />
						<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
						<param name="server.username" value="root" />
						<param name="server.password" value="31p@sSw0rd" />
					</antcall>
				
				
			</target>
	
	<target name="testclearfile" >
					
						<antcall target="stopTomcat">
							<param name="server.ip" value="10.0.15.137" />
							<param name="tomcat.port" value="8080" />
							<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
							<param name="server.username" value="root" />
							<param name="server.password" value="31p@sSw0rd" />
						</antcall>
						<sshexec host="10.0.15.137" username="root" password="31p@sSw0rd" command="rm -Rf /opt/env/apache-tomcat-7.0.54/webapps/SanyPDP" trust="true" />			
						
					
				</target>
				<target name="teststoptomcat" >
						
						<antcall target="stopTomcat">
							<param name="server.ip" value="10.0.15.137" />
							<param name="tomcat.port" value="8080" />
							<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
							<param name="server.username" value="root" />
							<param name="server.password" value="31p@sSw0rd" />
						</antcall>
					
					<antcall target="stopTomcat">
												<param name="server.ip" value="10.0.15.138" />
												<param name="tomcat.port" value="8080" />
												<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
												<param name="server.username" value="root" />
												<param name="server.password" value="31p@sSw0rd" />
											</antcall>
					<antcall target="stopTomcat">
																	<param name="server.ip" value="10.0.15.141" />
																	<param name="tomcat.port" value="8080" />
																	<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
																	<param name="server.username" value="root" />
																	<param name="server.password" value="1234qwerASDF" />
																</antcall>
						
					<antcall target="stopTomcat">
						<param name="server.ip" value="10.0.15.138" />
						<param name="tomcat.port" value="9080" />
						<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
						<param name="server.username" value="root" />
						<param name="server.password" value="31p@sSw0rd" />
					</antcall>
					<antcall target="stopTomcat">
						<param name="server.ip" value="10.0.15.137" />
						<param name="tomcat.port" value="9080" />
						<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
						<param name="server.username" value="root" />
						<param name="server.password" value="31p@sSw0rd" />
					</antcall>
				</target>
	
				<target name="teststarttomcat" >							
					<antcall target="startTomcat">
						<param name="server.ip" value="10.0.15.137" />
						<param name="tomcat.port" value="8080" />
						<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
						<param name="server.username" value="root" />
						<param name="server.password" value="31p@sSw0rd" />
						<param name="sleeptime" value="1" />
					</antcall>	
					<antcall target="startTomcat">
											<param name="server.ip" value="10.0.15.138" />
											<param name="tomcat.port" value="8080" />
											<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
											<param name="server.username" value="root" />
											<param name="server.password" value="31p@sSw0rd" />
						<param name="sleeptime" value="1" />
										</antcall>		
					<antcall target="startTomcat">
											<param name="server.ip" value="10.0.15.141" />
											<param name="tomcat.port" value="8080" />
											<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54" />
											<param name="server.username" value="root" />
											<param name="server.password" value="1234qwerASDF" />
						<param name="sleeptime" value="1" />
										</antcall>	
					<antcall target="startTomcat">
											<param name="server.ip" value="10.0.15.138" />
											<param name="tomcat.port" value="9080" />
											<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
											<param name="server.username" value="root" />
											<param name="server.password" value="31p@sSw0rd" />
						<param name="sleeptime" value="1" />
										</antcall>
										<antcall target="startTomcat">
											<param name="server.ip" value="10.0.15.137" />
											<param name="tomcat.port" value="9080" />
											<param name="tomcat.home" value="/opt/env/apache-tomcat-7.0.54-token" />
											<param name="server.username" value="root" />
											<param name="server.password" value="31p@sSw0rd" />
											<param name="sleeptime" value="1" />
										</antcall>
				</target>
</project>
