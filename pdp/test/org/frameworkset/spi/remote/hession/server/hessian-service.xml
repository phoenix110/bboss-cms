	
<properties>
	<description>
		<![CDATA[
			bboss hessian服务发布实例.
			hessian属性说明：
				  hessian:api 服务接口
				  hessian:serializable xml|bin 序列化类型,默认为bin
				  hessian:debug default false used by serializable="bin".
				  hessian:sendCollectionType used by serializable="bin". default true Set whether to send the Java collection type for each serialized collection.
				  hessian:serializerFactory used by serializable="bin".default com.caucho.hessian.io.SerializerFactory
			服务部署说明：
				在web.xml文件中配置HessionDispatchServlet
				<servlet>
					<servlet-name>HessionRemote</servlet-name>
					<servlet-class>org.frameworkset.spi.remote.hession.HessionDispatchServlet</servlet-class>
					
				</servlet>
				<servlet-mapping>
					<servlet-name>HessionRemote</servlet-name>
					<url-pattern>/hessian</url-pattern>
				</servlet-mapping>
			
			客户端调用示例:
				String url = "http://localhost:8080/context/hessian?container=bboss.hessian.mvc&containertype=mvc&service=basicservice";//指定容器标识和容器类型及服务标识
				url = "http://localhost:8080/context/hessian?service=basicservice";//默认获取mvc容器中的组件
				url参数说明：
				containertype 容器类型 
					mvc mvc容器
					simple DefaultApplicationContext 
				    application ApplicationContext
				
				bin模式客户端代理
			    HessianProxyFactory factory = new HessianProxyFactory();
			    ServiceInf basic = (ServiceInf) factory.create(org.frameworkset.spi.remote.hession.server.ServiceInf.class, url);
			
			    System.out.println("Hello: " + basic.hello("John"));
				xml模式客户端代理
			    BurlapProxyFactory factory = new BurlapProxyFactory();
			    ServiceInf basic = (ServiceInf) factory.create(org.frameworkset.spi.remote.hession.server.ServiceInf.class, url);
			
			    System.out.println("Hello: " + basic.hello("John"));
				
			    通过bboss-ioc配置和获取客户端	
				<property name="clientservice" class="com.caucho.hessian.client.HessianProxyFactory" factory-method="create">
					<construction>
						<property value="org.frameworkset.spi.remote.hession.server.ServiceInf"/>		
						<property value="http://localhost:8080/context/hessian?service=basicservice"/>	
					</construction>
				</property>	
			    DefaultApplicationContext context = DefaultApplicationContext.getApplicationContext("org/frameworkset/spi/remote/hession/client/hessian-client.xml");
				//获取客户端组件实例
				ServiceInf basic = context.getTBeanObject("clientservice", ServiceInf.class);
				]]>
	</description>
	<property name="basicservice" class="org.frameworkset.spi.remote.hession.server.BasicService"
		hessian:api="org.frameworkset.spi.remote.hession.server.ServiceInf"
	    hessian:serializable="bin"
	    hessian:debug="true"
	    hessian:sendCollectionType="true"
	    hessian:serializerFactory="com.caucho.hessian.io.SerializerFactory"/>	
</properties>