<properties>
<!-- 
		webservice服务组件装配文件,每个文件作为单独的容器来处理,这里装配的是classpath上下文中需要独立加载的webservice服务
		mvc框架中需要加载的webservice服务只需要在对应的组件中标注servicePort即可，当webservice引擎启动时会加载这两种模式下的
		所有webservice服务		
		需要注意的是，webservice引擎需要在mvc框架启动后在启动
	 -->
	<property name="cxf.webservices.modules" >
		<array componentType="String">
			<property value="org/frameworkset/spi/ws/protocol-ws.xml"/>
			
		</array>
	</property>
	
	
	<!-- 本组件依赖于bboss-mvc.jar -->
	<property name="webapplicationcontext" 
			  factory-class="org.frameworkset.web.servlet.support.WebApplicationContextUtils" 
			  factory-method="getWebApplicationContext"/>
	
	<!-- 
	 weblogic服务器发布webservice服务时需要指定ws.base.contextpath属性，
	 以便服务能够正常发布,其格式为：
	 http://ip:port/appcontext/webservicecontext
	 http代表传输协议
	 ip：服务端ip
	 port:服务端端口
	 appcontext:服务端上下文
	 webservicecontext：web.xml中配置的webservice服务引擎Servlet拦截url串，例如cxf在web.xml中的配置如下：
	 
	 <servlet>
		<display-name>cxf</display-name>
		<servlet-name>cxf</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.RPCCXFServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cxf</servlet-name>
		<url-pattern>/cxfservices/*</url-pattern>
	</servlet-mapping>
	
	则webservicecontext的值就对应为cxfservices。
	
	以下是一个配置示例：
	 http://172.16.25.108:7001/WebRoot/cxfservices/
	 -->	
	<property name="ws.base.contextpath" 
			  value="http://172.16.25.170:7001/esbnew/cxfservices/"/>
	
	
</properties>