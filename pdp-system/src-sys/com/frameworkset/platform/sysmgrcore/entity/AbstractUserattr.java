/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Tue Feb 14 11:48:25 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.frameworkset.platform.sysmgrcore.entity;

import java.io.Serializable;

/**
 * A class that represents a row in the td_sm_userattr table. You can customize
 * the behavior of this class by editing the class, {@link Userattr()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized *
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractUserattr implements Serializable {
    /**
     * The cached hash code value for this instance. Settting to 0 triggers
     * re-calculation.
     */
    private int hashValue = 0;

    /** The composite primary key value. */
    private String userattrId;

    /** The value of the simple userId property. */
    private Integer userId;

    /** The value of the simple userattrName property. */
    private String userattrName;

    /** The value of the simple userattrValue property. */
    private String userattrValue;

    /**
     * 用户属性实体，用户实体与它是一对多父子关系。
     */
    private User user = null;

    /**
     * @return 返回 user。
     */
    public User getUser() {
        return user;
    }

    /**
     * @param user
     *            要设置的 user。
     */
    public void setUser(User user) {
        this.user = user;
        
        if (user != null)
            this.userId = user.getUserId();
    }

    /**
     * Simple constructor of AbstractUserattr instances.
     */
    public AbstractUserattr() {
    }

    /**
     * Constructor of AbstractUserattr instances given a simple primary key.
     * 
     * @param userattrId
     */
    public AbstractUserattr(String userattrId) {
        this.setUserattrId(userattrId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * 
     * @return String
     */
    public String getUserattrId() {
        return userattrId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * 
     * @param userattrId
     */
    public void setUserattrId(String userattrId) {
        this.hashValue = 0;
        this.userattrId = userattrId;
    }

    /**
     * Return the value of the USER_ID column.
     * 
     * @return String
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Set the value of the USER_ID column.
     * 
     * @param userId
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Return the value of the USERATTR_NAME column.
     * 
     * @return String
     */
    public String getUserattrName() {
        return this.userattrName;
    }

    /**
     * Set the value of the USERATTR_NAME column.
     * 
     * @param userattrName
     */
    public void setUserattrName(String userattrName) {
        this.userattrName = userattrName;
    }

    /**
     * Return the value of the USERATTR_VALUE column.
     * 
     * @return String
     */
    public String getUserattrValue() {
        return this.userattrValue;
    }

    /**
     * Set the value of the USERATTR_VALUE column.
     * 
     * @param userattrValue
     */
    public void setUserattrValue(String userattrValue) {
        this.userattrValue = userattrValue;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the
     * primary key values.
     * 
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs) {
        if (rhs == null)
            return false;
        if (!(rhs instanceof Userattr))
            return false;
        Userattr that = (Userattr) rhs;
        if (this.getUserattrId() != null && that.getUserattrId() != null) {
            if (!this.getUserattrId().equals(that.getUserattrId())) {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern
     * with the exception of array properties (these are very unlikely primary
     * key types).
     * 
     * @return int
     */
    public int hashCode() {
        if (this.hashValue == 0) {
            int result = 17;
            int userattrIdValue = this.getUserattrId() == null ? 0 : this
                    .getUserattrId().hashCode();
            result = result * 37 + userattrIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}