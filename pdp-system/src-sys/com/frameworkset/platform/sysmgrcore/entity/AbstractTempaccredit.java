/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Wed Feb 08 15:37:32 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.frameworkset.platform.sysmgrcore.entity;

import java.io.Serializable;
import java.sql.Date;

/**
 * A class that represents a row in the td_sm_tempaccredit table. You can
 * customize the behavior of this class by editing the class,
 * {@link Tempaccredit()}. WARNING: DO NOT EDIT THIS FILE. This is a
 * generated file that is synchronized * by MyEclipse Hibernate tool
 * integration.
 */
public abstract class AbstractTempaccredit implements Serializable {
	/**
	 * The cached hash code value for this instance. Settting to 0 triggers
	 * re-calculation.
	 */
	private int hashValue = 0;

	/** The simple primary key value. */
	private TempaccreditKey id = new TempaccreditKey();

	/** The value of the simple validfrom property. */
	private Date validfrom;

	/** The value of the simple validto property. */
	private Date validto;

	/**
	 * 临时授权所关联的用户实体
	 */
	private User user = null;

	/**
	 * 临时授权所关联的操作
	 */
	private Operation operation = null;

	/**
	 * @return 返回 operation。
	 */
	public Operation getOperation() {
		return operation;
	}

	/**
	 * @param operation
	 *            要设置的 operation。
	 */
	public void setOperation(Operation operation) {
		this.operation = operation;
		
		if (id.getOpId() == null && operation != null)
		    id.setOpId(operation.getOpId());
	}

	/**
	 * @return 返回 user。
	 */
	public User getUser() {
		return user;
	}

	/**
	 * @param user
	 *            要设置的 user。
	 */
	public void setUser(User user) {
		this.user = user;
		
		if (id.getUserId() == null && user != null) 
		    id.setUserId(user.getUserId());
	}

	/**
	 * Simple constructor of AbstractTempaccredit instances.
	 */
	public AbstractTempaccredit() {
	}

	/**
	 * Constructor of AbstractTempaccredit instances given a composite
	 * primary key.
	 * 
	 * @param id
	 */
	public AbstractTempaccredit(TempaccreditKey id) {
		this.setId(id);
	}

	/**
	 * Return the composite id instance that identifies this object.
	 * 
	 * @return TempaccreditKey
	 */
	public TempaccreditKey getId() {
		return this.id;
	}

	/**
	 * Set the composite id instance that identifies this object.
	 * 
	 * @param id
	 */
	public void setId(TempaccreditKey id) {
		this.hashValue = 0;
		this.id = id;
	}

	/**
	 * Return the value of the VALIDFROM column.
	 * 
	 * @return Date
	 */
	public Date getValidfrom() {
		return this.validfrom;
	}

	/**
	 * Set the value of the VALIDFROM column.
	 * 
	 * @param validfrom
	 */
	public void setValidfrom(Date validfrom) {
		this.validfrom = validfrom;
	}

	/**
	 * Return the value of the VALIDTO column.
	 * 
	 * @return Date
	 */
	public Date getValidto() {
		return this.validto;
	}

	/**
	 * Set the value of the VALIDTO column.
	 * 
	 * @param validto
	 */
	public void setValidto(Date validto) {
		this.validto = validto;
	}

	/**
	 * Implementation of the equals comparison on the basis of equality of the
	 * primary key values.
	 * 
	 * @param rhs
	 * @return boolean
	 */
	public boolean equals(Object rhs) {
		if (rhs == null)
			return false;
		if (!(rhs instanceof Tempaccredit))
			return false;
		Tempaccredit that = (Tempaccredit) rhs;
		if (this.getId() != null && that.getId() != null) {
			return (this.getId().equals(that.getId()));
		}
		return true;
	}

	/**
	 * Implementation of the hashCode method conforming to the Bloch pattern
	 * with the exception of array properties (these are very unlikely primary
	 * key types).
	 * 
	 * @return int
	 */
	public int hashCode() {
		if (this.hashValue == 0) {
			int result = 17;
			if (this.getId() == null) {
				result = super.hashCode();
			} else {
				result = this.getId().hashCode();
			}
			this.hashValue = result;
		}
		return this.hashValue;
	}
}