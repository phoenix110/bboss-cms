/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Wed Feb 08 15:35:32 CST 2006 by MyEclipse Hibernate Tool.
 */
package com.frameworkset.platform.sysmgrcore.entity;

import java.io.Serializable;

/**
 * A class that represents a row in the td_sm_lcontrol table. 
 * You can customize the behavior of this class by editing the class, {@link Lcontrol()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractLcontrol 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private String lcontrolId;

    /** The value of the simple listdictId property. */
    private String listdictId;

    /** The value of the simple lcontrolAction property. */
    private String lcontrolAction;

    /**
     * Simple constructor of AbstractLcontrol instances.
     */
    public AbstractLcontrol()
    {
    }

    /**
     * Constructor of AbstractLcontrol instances given a simple primary key.
     * @param lcontrolId
     */
    public AbstractLcontrol(String lcontrolId)
    {
        this.setLcontrolId(lcontrolId);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return String
     */
    public String getLcontrolId()
    {
        return lcontrolId;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param lcontrolId
     */
    public void setLcontrolId(String lcontrolId)
    {
        this.hashValue = 0;
        this.lcontrolId = lcontrolId;
    }

    /**
     * Return the value of the LISTDICT_ID column.
     * @return String
     */
    public String getListdictId()
    {
        return this.listdictId;
    }

    /**
     * Set the value of the LISTDICT_ID column.
     * @param listdictId
     */
    public void setListdictId(String listdictId)
    {
        this.listdictId = listdictId;
    }

    /**
     * Return the value of the LCONTROL_ACTION column.
     * @return String
     */
    public String getLcontrolAction()
    {
        return this.lcontrolAction;
    }

    /**
     * Set the value of the LCONTROL_ACTION column.
     * @param lcontrolAction
     */
    public void setLcontrolAction(String lcontrolAction)
    {
        this.lcontrolAction = lcontrolAction;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Lcontrol))
            return false;
        Lcontrol that = (Lcontrol) rhs;
        if (this.getLcontrolId() != null && that.getLcontrolId() != null)
        {
            if (! this.getLcontrolId().equals(that.getLcontrolId()))
            {
                return false;
            }
        }
        return true;
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int lcontrolIdValue = this.getLcontrolId() == null ? 0 : this.getLcontrolId().hashCode();
            result = result * 37 + lcontrolIdValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
